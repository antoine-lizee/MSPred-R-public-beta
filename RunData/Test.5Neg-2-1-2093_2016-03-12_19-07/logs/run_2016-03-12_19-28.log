Treating group of Categories: Co
Selected columns:
Core.AgeAtExam, Core.EDSS, Core.DiseaseDuration, Core.DiseaseCourse, Core.MSSS
Already run predictor 'GLM' on group 'Co', skipping...
Already run predictor 'RF' on group 'Co', skipping...
Already run predictor 'RF2' on group 'Co', skipping...
Already run predictor 'RF3' on group 'Co', skipping...
Running predictor 'RFO' for group 'Co'.
RFO for groups Core                                (  5 features) -> best mtry:  2 [perf: 0.705]
RFO for groups Core                                (  5 features) -> best mtry:  3 [perf: 0.812]
ERROR running train/test for predictor 'RFO' and group 'Co': 
 length(res) == sum(foldIdx == i) is not TRUE
TRACEBACK:
1: .handleSimpleError(function (e) 
 {
     sc <- sys.calls()
     cats("ERROR running train/test for predictor '%s' and group '%s': \n %s\nTRACEBACK:\n%s\n", predName, 
         catGroupLabel, e$message, paste(create_traceback(sc[25:(length(sc) - 2)]), collapse = "\n"), 
         file = logFilePath)
 }, "length(res) == sum(foldIdx == i) is not TRUE", quote(NULL))
2: stop(sprintf(ngettext(length(r), "%s is not TRUE", "%s are not all TRUE"), ch), call. = FALSE, domain = NA)
Already run predictor 'RP' on group 'Co', skipping...
Running predictor 'SVM' for group 'Co'.
SVM for groups Core                                (  5 features) -> best gamma:   0.00195 / best cost:  0.316 [perf: 0.753]
ERROR running train/test for predictor 'SVM' and group 'Co': 
 Not enough distinct predictions to compute area under the ROC curve.
TRACEBACK:
1: tunecontrol$error.fun(true.y, pred)
2: AUROC(Yp, Yt) at Code/05_predictors.R:76
3: calcAuroc(ROCR::prediction(preds, labels)) at Code/Helpers/Evaluator.R:26
4: ROCR::performance(pred, "auc") at Code/Helpers/Evaluator.R:22
5: do.call(function.name, argumentlist)
6: .performance.auc(fpr.stop = 1, predictions = structure(c(0.0459968520342753, 0.0437216252289058, 0.0411061015651714, 
 0.0426930915040191, 0.0334593718648637, 0.034219661833698, 0.0427089098485751, 0.0418901357169825, 
 0.0405905904809622, 0.0411922590549365, 0.0417068960485741, 0.0489225490841137, 0.0350431116541212, 
 0.0430615545967225, 0.0429163460380743, 0.0422651377772089, 0.0469355435719835, 0.043934880047795, 
 0.0446589662813026, 0.0359114826149227, 0.0424948009204045, 0.0463299738309436, 0.0431199045315687, 
 0.049216706287266, 0.0496945256804374, 0.0432928532391994, 0.0432078538649387, 0.0445572335027187, 
 0.0404685481970654, 0.0390127827789596, 0.0445961320215857, 0.0437216252289058, 0.0358277115834605, 
 0.0452246407894835, 0.0445014464358433, 0.04603304701186, 0.0440005389784948, 0.0462395897003567, 0.0607820293163473, 
 0.0437503426298351, 0.041536348978212, 0.0434415246010329, 0.0447131953570231, 0.0444854665730149, 
 0.03489972963255, 0.0455016054659974, 0.0442733941047123, 0.0447255035536704, 0.0433665459838696, 0.0477900826264987, 
 0.0451361293770672, 0.0348375692537305, 0.0364657091176651), .Names = c("1", "2", "3", "4", "5", "6", 
 "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", 
 "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", 
 "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53")), labels = structure(c(1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L), .Label = c("FALSE", "TRUE"), class = c("ordered", "factor")), cutoffs = structure(c(Inf, 0.0607820293163473, 
 0.0496945256804374, 0.049216706287266, 0.0489225490841137, 0.0477900826264987, 0.0469355435719835, 
 0.0463299738309436, 0.0462395897003567, 0.04603304701186, 0.0459968520342753, 0.0455016054659974, 0.0452246407894835, 
 0.0451361293770672, 0.0447255035536704, 0.0447131953570231, 0.0446589662813026, 0.0445961320215857, 
 0.0445572335027187, 0.0445014464358433, 0.0444854665730149, 0.0442733941047123, 0.0440005389784948, 
 0.043934880047795, 0.0437503426298351, 0.0437216252289058, 0.0434415246010329, 0.0433665459838696, 
 0.0432928532391994, 0.0432078538649387, 0.0431199045315687, 0.0430615545967225, 0.0429163460380743, 
 0.0427089098485751, 0.0426930915040191, 0.0424948009204045, 0.0422651377772089, 0.0418901357169825, 
 0.0417068960485741, 0.041536348978212, 0.0411922590549365, 0.0411061015651714, 0.0405905904809622, 
 0.0404685481970654, 0.0390127827789596, 0.0364657091176651, 0.0359114826149227, 0.0358277115834605, 
 0.0350431116541212, 0.03489972963255, 0.0348375692537305, 0.034219661833698, 0.0334593718648637), .Names = c("", 
 "39", "25", "24", "12", "50", "17", "22", "38", "36", "1", "46", "34", "51", "48", "43", "19", "31", 
 "28", "35", "44", "47", "37", "18", "40", "32", "42", "49", "26", "27", "23", "14", "15", "7", "4", 
 "21", "16", "8", "11", "41", "10", "3", "9", "29", "30", "53", "20", "33", "13", "45", "52", "6", "5"
 )), fp = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
 51, 52, 53), tp = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), fn = c(0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), tn = c(53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 
 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 
 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0), n.pos = 0L, n.neg = 53L, n.pos.pred = c(0, 1, 
 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 
 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53), n.neg.pred = c(53, 
 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 27, 
 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0))
7: stop(paste("Not enough distinct predictions to compute area", "under the ROC curve."))
Already run predictor 'NB' on group 'Co', skipping...
Running predictor 'KNN' for group 'Co'.
KNN for groups Core                                (  5 features) ->  best k: 11  / kernel: optimal    [perf: 0.748]
KNN for groups Core                                (  5 features) ->  best k: 9   / kernel: optimal    [perf: 0.834]
ERROR running train/test for predictor 'KNN' and group 'Co': 
 length(res) == sum(foldIdx == i) is not TRUE
TRACEBACK:
1: .handleSimpleError(function (e) 
 {
     sc <- sys.calls()
     cats("ERROR running train/test for predictor '%s' and group '%s': \n %s\nTRACEBACK:\n%s\n", predName, 
         catGroupLabel, e$message, paste(create_traceback(sc[25:(length(sc) - 2)]), collapse = "\n"), 
         file = logFilePath)
 }, "length(res) == sum(foldIdx == i) is not TRUE", quote(NULL))
2: stop(sprintf(ngettext(length(r), "%s is not TRUE", "%s are not all TRUE"), ch), call. = FALSE, domain = NA)
Already run predictor 'KNNC' on group 'Co', skipping...
Treating group of Categories: CoPa
Selected columns:
Core.AgeAtExam, Core.EDSS, Core.DiseaseDuration, Core.DiseaseCourse, Core.MSSS, Patient.AgeOfOnset, Patient.Gender
Already run predictor 'GLM' on group 'CoPa', skipping...
Already run predictor 'RF' on group 'CoPa', skipping...
Already run predictor 'RF2' on group 'CoPa', skipping...
Already run predictor 'RF3' on group 'CoPa', skipping...
Running predictor 'RFO' for group 'CoPa'.
RFO for groups Core - Patient                      (  7 features) -> best mtry:  2 [perf: 0.718]
ERROR running train/test for predictor 'RFO' and group 'CoPa': 
 Not enough distinct predictions to compute area under the ROC curve.
TRACEBACK:
1: tune("randomForest", train.x = x, train.y = y, ranges = ranges, ...)
2: tunecontrol$error.fun(true.y, pred)
3: AUROC(Yp, Yt) at Code/05_predictors.R:39
4: calcAuroc(ROCR::prediction(preds, labels)) at Code/Helpers/Evaluator.R:26
5: ROCR::performance(pred, "auc") at Code/Helpers/Evaluator.R:22
6: do.call(function.name, argumentlist)
7: .performance.auc(fpr.stop = 1, predictions = structure(c(0.14, 0.32, 0.062, 0, 0.092, 0.044, 0.002, 
 0.006, 0, 0.002, 0.008, 0, 0, 0, 0.004, 0, 0.062, 0.026, 0, 0, 0, 0.004, 0.014, 0.012, 0, 0, 0, 0.528, 
 0, 0, 0, 0, 0, 0, 0, 0, 0.002, 0, 0.008, 0.004, 0.002, 0.006, 0.012, 0, 0.008, 0.012, 0, 0.01, 0, 0.02, 
 0.006, 0, 0.002), .Names = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", 
 "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", 
 "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", 
 "49", "50", "51", "52", "53")), labels = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L), .Label = c("FALSE", "TRUE"), class = c("ordered", 
 "factor")), cutoffs = structure(c(Inf, 0.528, 0.32, 0.14, 0.092, 0.062, 0.044, 0.026, 0.02, 0.014, 
 0.012, 0.01, 0.008, 0.006, 0.004, 0.002, 0), .Names = c("", "28", "2", "1", "5", "17", "6", "18", "50", 
 "23", "46", "48", "45", "51", "40", "53", "52")), fp = c(0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 17, 
 20, 23, 28, 53), tp = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), fn = c(0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), tn = c(53, 52, 51, 50, 49, 47, 46, 45, 44, 43, 40, 39, 36, 33, 30, 
 25, 0), n.pos = 0L, n.neg = 53L, n.pos.pred = c(0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 17, 20, 23, 
 28, 53), n.neg.pred = c(53, 52, 51, 50, 49, 47, 46, 45, 44, 43, 40, 39, 36, 33, 30, 25, 0))
8: stop(paste("Not enough distinct predictions to compute area", "under the ROC curve."))
Running predictor 'RP' for group 'CoPa'.
RPart for groups Core - Patient                      (  7 features) -> best min split: 70 / best cp: 0.002  [perf: 0.746]
ERROR running train/test for predictor 'RP' and group 'CoPa': 
 Number of classes is not equal to 2.
ROCR currently supports only evaluation of binary classification tasks.
TRACEBACK:
1: tune("rpart.wrapper", train.x = formula, data = data, ranges = ranges, predict.func = predict.func, 
     na.action = na.action, ...)
2: tunecontrol$error.fun(true.y, pred)
3: AUROC(Yp, Yt) at Code/05_predictors.R:128
4: calcAuroc(ROCR::prediction(preds, labels)) at Code/Helpers/Evaluator.R:26
5: ROCR::performance(pred, "auc") at Code/Helpers/Evaluator.R:22
6: ROCR::prediction(preds, labels)
7: stop(message)
Running predictor 'SVM' for group 'CoPa'.
SVM for groups Core - Patient                      (  7 features) -> best gamma:   0.00195 / best cost:   31.6 [perf: 0.752]
ERROR running train/test for predictor 'SVM' and group 'CoPa': 
 Not enough distinct predictions to compute area under the ROC curve.
TRACEBACK:
1: tunecontrol$error.fun(true.y, pred)
2: AUROC(Yp, Yt) at Code/05_predictors.R:76
3: calcAuroc(ROCR::prediction(preds, labels)) at Code/Helpers/Evaluator.R:26
4: ROCR::performance(pred, "auc") at Code/Helpers/Evaluator.R:22
5: do.call(function.name, argumentlist)
6: .performance.auc(fpr.stop = 1, predictions = structure(c(0.105918450771, 0.0373961478108624, 0.0153542364525362, 
 0.0208747617443943, 0.0214842983269035, 0.0248338820451891, 0.0150677422556911, 0.0201832877542653, 
 0.0169219683690244, 0.0456574622260644, 0.0322024548386128, 0.0301890990811228, 0.0185006328635411, 
 0.0231273145613671, 0.0565193295191917, 0.016553957168063, 0.0167517780026307, 0.039996833702171, 0.0410515403152013, 
 0.0204549169703466, 0.0352195089161129, 0.0367495897905512, 0.0268217664132835, 0.0200461432925728, 
 0.0211049796617184, 0.0537928604353216, 0.0393655590333764, 0.0185776984929814, 0.0228226920636696, 
 0.0662348967727233, 0.0274659465708588, 0.0159572817014375, 0.0589263029490317, 0.0164263621515594, 
 0.0341642930308246, 0.0455178409294525, 0.0443169313931594, 0.0214653575816752, 0.0305783983582699, 
 0.0150231482044891, 0.0264765528634516, 0.0161897205982759, 0.0129590242954494, 0.0325183351261829, 
 0.0332588432093566, 0.0279796822641373, 0.0258855308499508, 0.0276268746727639, 0.0204924855018055, 
 0.0200260176746816, 0.020389239780596, 0.023528975279501, 0.0573352733578379), .Names = c("1", "2", 
 "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", 
 "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", 
 "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53")), labels = structure(c(1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L), .Label = c("FALSE", "TRUE"), class = c("ordered", "factor")), cutoffs = structure(c(Inf, 0.105918450771, 
 0.0662348967727233, 0.0589263029490317, 0.0573352733578379, 0.0565193295191917, 0.0537928604353216, 
 0.0456574622260644, 0.0455178409294525, 0.0443169313931594, 0.0410515403152013, 0.039996833702171, 
 0.0393655590333764, 0.0373961478108624, 0.0367495897905512, 0.0352195089161129, 0.0341642930308246, 
 0.0332588432093566, 0.0325183351261829, 0.0322024548386128, 0.0305783983582699, 0.0301890990811228, 
 0.0279796822641373, 0.0276268746727639, 0.0274659465708588, 0.0268217664132835, 0.0264765528634516, 
 0.0258855308499508, 0.0248338820451891, 0.023528975279501, 0.0231273145613671, 0.0228226920636696, 
 0.0214842983269035, 0.0214653575816752, 0.0211049796617184, 0.0208747617443943, 0.0204924855018055, 
 0.0204549169703466, 0.020389239780596, 0.0201832877542653, 0.0200461432925728, 0.0200260176746816, 
 0.0185776984929814, 0.0185006328635411, 0.0169219683690244, 0.0167517780026307, 0.016553957168063, 
 0.0164263621515594, 0.0161897205982759, 0.0159572817014375, 0.0153542364525362, 0.0150677422556911, 
 0.0150231482044891, 0.0129590242954494), .Names = c("", "1", "30", "33", "53", "15", "26", "10", "36", 
 "37", "19", "18", "27", "2", "22", "21", "35", "45", "44", "11", "39", "12", "46", "48", "31", "23", 
 "41", "47", "6", "52", "14", "29", "5", "38", "25", "4", "49", "20", "51", "8", "24", "50", "28", "13", 
 "9", "17", "16", "34", "42", "32", "3", "7", "40", "43")), fp = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53), tp = c(0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), fn = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0), tn = c(53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 
 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 
 8, 7, 6, 5, 4, 3, 2, 1, 0), n.pos = 0L, n.neg = 53L, n.pos.pred = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53), n.neg.pred = c(53, 52, 51, 
 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 
 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0))
7: stop(paste("Not enough distinct predictions to compute area", "under the ROC curve."))
Already run predictor 'NB' on group 'CoPa', skipping...
Running predictor 'KNN' for group 'CoPa'.
KNN for groups Core - Patient                      (  7 features) ->  best k: 11  / kernel: optimal    [perf: 0.722]
KNN for groups Core - Patient                      (  7 features) ->  best k: 6   / kernel: optimal    [perf: 0.838]
ERROR running train/test for predictor 'KNN' and group 'CoPa': 
 length(res) == sum(foldIdx == i) is not TRUE
TRACEBACK:
1: .handleSimpleError(function (e) 
 {
     sc <- sys.calls()
     cats("ERROR running train/test for predictor '%s' and group '%s': \n %s\nTRACEBACK:\n%s\n", predName, 
         catGroupLabel, e$message, paste(create_traceback(sc[25:(length(sc) - 2)]), collapse = "\n"), 
         file = logFilePath)
 }, "length(res) == sum(foldIdx == i) is not TRUE", quote(NULL))
2: stop(sprintf(ngettext(length(r), "%s is not TRUE", "%s are not all TRUE"), ch), call. = FALSE, domain = NA)
Already run predictor 'KNNC' on group 'CoPa', skipping...
Treating group of Categories: Pa
Selected columns:
Patient.AgeOfOnset, Patient.Gender
Already run predictor 'GLM' on group 'Pa', skipping...
Already run predictor 'RF' on group 'Pa', skipping...
Already run predictor 'RF2' on group 'Pa', skipping...
Already run predictor 'RF3' on group 'Pa', skipping...
Already run predictor 'RFO' on group 'Pa', skipping...
Already run predictor 'RP' on group 'Pa', skipping...
Already run predictor 'SVM' on group 'Pa', skipping...
Already run predictor 'NB' on group 'Pa', skipping...
Running predictor 'KNN' for group 'Pa'.
KNN for groups Patient                             (  2 features) ->  best k: 11  / kernel: optimal    [perf: 0.564]
KNN for groups Patient                             (  2 features) ->  best k: 11  / kernel: optimal    [perf: 0.812]
ERROR running train/test for predictor 'KNN' and group 'Pa': 
 length(res) == sum(foldIdx == i) is not TRUE
TRACEBACK:
1: .handleSimpleError(function (e) 
 {
     sc <- sys.calls()
     cats("ERROR running train/test for predictor '%s' and group '%s': \n %s\nTRACEBACK:\n%s\n", predName, 
         catGroupLabel, e$message, paste(create_traceback(sc[25:(length(sc) - 2)]), collapse = "\n"), 
         file = logFilePath)
 }, "length(res) == sum(foldIdx == i) is not TRUE", quote(NULL))
2: stop(sprintf(ngettext(length(r), "%s is not TRUE", "%s are not all TRUE"), ch), call. = FALSE, domain = NA)
Already run predictor 'KNNC' on group 'Pa', skipping...
Time elapsed for the run:
0.001509905 secs

2022-08-25 23:09:43: ###### Treating group of Categories: ClMR
2022-08-25 23:09:43: Selected columns:
Clinical.ATM, Clinical.OpticNeuritis, Clinical.INO, Clinical.MotorWeakness, Clinical.SensoryDisturbance, Clinical.Ataxia, Clinical.BladderDisturbance, Clinical.BowelDisturbance, Clinical.Myelopathy, Clinical.CogDisturbance, Clinical.VisualLoss, MRI.CE_Lesion, MRI.GM_Volume, MRI.Siena_PBVC
2022-08-25 23:09:43: Already run predictor 'GLM' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RF' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RF2' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RF3' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RFO' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RP' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'SVM' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'NB' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'KNN' on group 'ClMR', skipping...
2022-08-25 23:09:43: Already run predictor 'KNNC' on group 'ClMR', skipping...
2022-08-25 23:09:43: ## Ran group 'ClMR' in 0.00 minutes.

2022-08-25 23:09:43: ###### Treating group of Categories: CoLi
2022-08-25 23:09:43: Selected columns:
Core.AgeAtExam, Core.EDSS, Core.DiseaseDuration, Core.DiseaseCourse, Core.MSSS, Life.CaffeineFreq, Life.MemoryConcerns, Life.Smoking
2022-08-25 23:09:43: Already run predictor 'GLM' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'RF' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'RF2' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'RF3' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'RFO' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'RP' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'SVM' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'NB' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'KNN' on group 'CoLi', skipping...
2022-08-25 23:09:43: Already run predictor 'KNNC' on group 'CoLi', skipping...
2022-08-25 23:09:43: ## Ran group 'CoLi' in 0.00 minutes.

2022-08-25 23:09:43: ###### Treating group of Categories: CoFSMR
2022-08-25 23:09:43: Selected columns:
Core.AgeAtExam, Core.EDSS, Core.DiseaseDuration, Core.DiseaseCourse, Core.MSSS, FSSs.Visual, FSSs.Brainstem, FSSs.Pyramidal, FSSs.Cerebellar, FSSs.Sensory, FSSs.Bowel, FSSs.Mental, MRI.CE_Lesion, MRI.GM_Volume, MRI.Siena_PBVC
2022-08-25 23:09:43: Already run predictor 'GLM' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RF' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RF2' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RF3' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RFO' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'RP' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'SVM' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'NB' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'KNN' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: Already run predictor 'KNNC' on group 'CoFSMR', skipping...
2022-08-25 23:09:43: ## Ran group 'CoFSMR' in 0.00 minutes.

2022-08-25 23:09:43: ###### Treating group of Categories: CoMRMS
2022-08-25 23:09:43: Selected columns:
Core.AgeAtExam, Core.EDSS, Core.DiseaseDuration, Core.DiseaseCourse, Core.MSSS, MRI.CE_Lesion, MRI.GM_Volume, MRI.Siena_PBVC, MSFC.T25FW, MSFC.NHPT
2022-08-25 23:09:43: Already run predictor 'GLM' on group 'CoMRMS', skipping...
2022-08-25 23:09:43: Already run predictor 'RF' on group 'CoMRMS', skipping...
2022-08-25 23:09:43: Already run predictor 'RF2' on group 'CoMRMS', skipping...
2022-08-25 23:09:43: Already run predictor 'RF3' on group 'CoMRMS', skipping...
2022-08-25 23:09:43: Already run predictor 'RFO' on group 'CoMRMS', skipping...
2022-08-25 23:09:43: Already run predictor 'RP' on group 'CoMRMS', skipping...
2022-08-25 23:09:43: Running predictor 'SVM' for group 'CoMRMS'.
2022-08-25 23:09:44: CV num 1
2022-08-25 23:12:36: SVM for groups Core - MRI - MSFC                   ( 10 features) -> best gamma:   0.00391 / best cost:   31.6 [perf: 0.762]
2022-08-25 23:15:54: SVM for groups Core - MRI - MSFC                   ( 10 features) -> best gamma:   0.00391 / best cost:     10 [perf: 0.737]
2022-08-25 23:19:07: SVM for groups Core - MRI - MSFC                   ( 10 features) -> best gamma:    0.0156 / best cost:   3.16 [perf: 0.735]

2022-08-25 23:19:07: CV num 2
2022-08-25 23:22:12: SVM for groups Core - MRI - MSFC                   ( 10 features) -> best gamma:   0.00391 / best cost:     10 [perf: 0.720]
2022-08-25 23:24:58: SVM for groups Core - MRI - MSFC                   ( 10 features) -> best gamma:   0.00391 / best cost:   31.6 [perf: 0.752]
2022-08-25 23:28:06: SVM for groups Core - MRI - MSFC                   ( 10 features) -> best gamma:   0.00781 / best cost:     10 [perf: 0.749]

2022-08-25 23:28:06: Ran predictor 'SVM' for group 'CoMRMS' in 18.38 minutes.
2022-08-25 23:28:06: Already run predictor 'NB' on group 'CoMRMS', skipping...
2022-08-25 23:28:06: Running predictor 'KNN' for group 'CoMRMS'.
2022-08-25 23:28:06: CV num 1
2022-08-25 23:28:11: KNN for groups Core - MRI - MSFC                   ( 10 features) ->  best k: 200 / kernel: optimal    [perf: 0.710]
2022-08-25 23:28:13: KNN for groups Core - MRI - MSFC                   ( 10 features) ->  best k: 190 / kernel: optimal    [perf: 0.695]
2022-08-25 23:28:14: KNN for groups Core - MRI - MSFC                   ( 10 features) ->  best k: 120 / kernel: optimal    [perf: 0.685]

2022-08-25 23:28:15: CV num 2
2022-08-25 23:28:16: KNN for groups Core - MRI - MSFC                   ( 10 features) ->  best k: 180 / kernel: optimal    [perf: 0.676]
2022-08-25 23:28:18: KNN for groups Core - MRI - MSFC                   ( 10 features) ->  best k: 170 / kernel: optimal    [perf: 0.705]
2022-08-25 23:28:19: KNN for groups Core - MRI - MSFC                   ( 10 features) ->  best k: 200 / kernel: optimal    [perf: 0.711]

2022-08-25 23:28:19: Ran predictor 'KNN' for group 'CoMRMS' in 0.21 minutes.
2022-08-25 23:28:19: Already run predictor 'KNNC' on group 'CoMRMS', skipping...
2022-08-25 23:28:19: ## Ran group 'CoMRMS' in 18.60 minutes.

2022-08-25 23:28:19: ###### Treating group of Categories: FSQO
2022-08-25 23:28:19: Selected columns:
FSSs.Visual, FSSs.Brainstem, FSSs.Pyramidal, FSSs.Cerebellar, FSSs.Sensory, FSSs.Bowel, FSSs.Mental, QOL.LackFocus, QOL.LackEnergy, QOL.PsychoDown, QOL.RelativePain, QOL.NotEnjoyLife
2022-08-25 23:28:19: Already run predictor 'GLM' on group 'FSQO', skipping...
2022-08-25 23:28:19: Already run predictor 'RF' on group 'FSQO', skipping...
2022-08-25 23:28:19: Already run predictor 'RF2' on group 'FSQO', skipping...
2022-08-25 23:28:19: Already run predictor 'RF3' on group 'FSQO', skipping...
2022-08-25 23:28:19: Running predictor 'RFO' for group 'FSQO'.
2022-08-25 23:28:19: CV num 1
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

2022-08-25 23:28:48: RFO for groups FSSs - QOL                          ( 12 features) -> best mtry:  2 [perf: 0.689]
2022-08-25 23:29:18: RFO for groups FSSs - QOL                          ( 12 features) -> best mtry:  2 [perf: 0.649]
2022-08-25 23:29:50: RFO for groups FSSs - QOL                          ( 12 features) -> best mtry:  3 [perf: 0.644]

2022-08-25 23:29:50: CV num 2
2022-08-25 23:30:22: RFO for groups FSSs - QOL                          ( 12 features) -> best mtry:  2 [perf: 0.642]
2022-08-25 23:30:48: RFO for groups FSSs - QOL                          ( 12 features) -> best mtry:  2 [perf: 0.674]
2022-08-25 23:31:18: RFO for groups FSSs - QOL                          ( 12 features) -> best mtry:  2 [perf: 0.672]

2022-08-25 23:31:18: Ran predictor 'RFO' for group 'FSQO' in 2.98 minutes.
2022-08-25 23:31:18: Running predictor 'RP' for group 'FSQO'.
2022-08-25 23:31:18: CV num 1
2022-08-25 23:31:40: RPart for groups FSSs - QOL                          ( 12 features) -> best min split: 40 / best cp: 0.002  [perf: 0.631]
2022-08-25 23:32:03: RPart for groups FSSs - QOL                          ( 12 features) -> best min split: 70 / best cp: 0.005  [perf: 0.629]
2022-08-25 23:32:24: RPart for groups FSSs - QOL                          ( 12 features) -> best min split: 50 / best cp: 0.005  [perf: 0.611]

2022-08-25 23:32:24: CV num 2
2022-08-25 23:32:44: RPart for groups FSSs - QOL                          ( 12 features) -> best min split: 90 / best cp: 0.001  [perf: 0.610]
2022-08-25 23:33:03: RPart for groups FSSs - QOL                          ( 12 features) -> best min split: 50 / best cp: 0.0001 [perf: 0.649]
2022-08-25 23:33:25: RPart for groups FSSs - QOL                          ( 12 features) -> best min split: 60 / best cp: 0.01   [perf: 0.638]

2022-08-25 23:33:25: Ran predictor 'RP' for group 'FSQO' in 2.11 minutes.
2022-08-25 23:33:25: Running predictor 'SVM' for group 'FSQO'.
2022-08-25 23:33:25: CV num 1
2022-08-25 23:37:02: SVM for groups FSSs - QOL                          ( 12 features) -> best gamma:     0.125 / best cost:    0.1 [perf: 0.702]
2022-08-25 23:42:19: SVM for groups FSSs - QOL                          ( 12 features) -> best gamma:     0.125 / best cost:    0.1 [perf: 0.667]
2022-08-25 23:47:07: SVM for groups FSSs - QOL                          ( 12 features) -> best gamma:   0.00391 / best cost:    0.1 [perf: 0.640]

2022-08-25 23:47:07: CV num 2
2022-08-25 23:51:05: SVM for groups FSSs - QOL                          ( 12 features) -> best gamma:     0.125 / best cost:    0.1 [perf: 0.660]
2022-08-25 23:54:42: SVM for groups FSSs - QOL                          ( 12 features) -> best gamma:     0.125 / best cost:    0.1 [perf: 0.676]
2022-08-25 23:58:29: SVM for groups FSSs - QOL                          ( 12 features) -> best gamma:    0.0312 / best cost:      1 [perf: 0.695]

2022-08-25 23:58:29: Ran predictor 'SVM' for group 'FSQO' in 25.07 minutes.
2022-08-25 23:58:29: Already run predictor 'NB' on group 'FSQO', skipping...
2022-08-25 23:58:29: Running predictor 'KNN' for group 'FSQO'.
2022-08-25 23:58:29: CV num 1
2022-08-25 23:58:32: KNN for groups FSSs - QOL                          ( 12 features) ->  best k: 50  / kernel: optimal    [perf: 0.702]
2022-08-25 23:58:34: KNN for groups FSSs - QOL                          ( 12 features) ->  best k: 80  / kernel: optimal    [perf: 0.679]
2022-08-25 23:58:35: KNN for groups FSSs - QOL                          ( 12 features) ->  best k: 70  / kernel: optimal    [perf: 0.667]

2022-08-25 23:58:35: CV num 2
2022-08-25 23:58:37: KNN for groups FSSs - QOL                          ( 12 features) ->  best k: 80  / kernel: optimal    [perf: 0.666]
2022-08-25 23:58:40: KNN for groups FSSs - QOL                          ( 12 features) ->  best k: 110 / kernel: optimal    [perf: 0.685]
2022-08-25 23:58:42: KNN for groups FSSs - QOL                          ( 12 features) ->  best k: 80  / kernel: optimal    [perf: 0.694]

2022-08-25 23:58:42: Ran predictor 'KNN' for group 'FSQO' in 0.22 minutes.
2022-08-25 23:58:42: Already run predictor 'KNNC' on group 'FSQO', skipping...
2022-08-25 23:58:42: ## Ran group 'FSQO' in 30.38 minutes.

2022-08-25 23:58:42: ###### Treating group of Categories: MSTr
2022-08-25 23:58:42: Selected columns:
MSFC.T25FW, MSFC.NHPT, Treatments.DMTname, Treatments.nDMT, Treatments.hasIM, Treatments.hasIS, Treatments.hasMA, Treatments.DMTcategory
2022-08-25 23:58:42: Running predictor 'GLM' for group 'MSTr'.
2022-08-25 23:58:42: CV num 1
Loading required package: Matrix
Loading required package: foreach
Loaded glmnet 2.0-5

Warning in data.matrix(Xtrain) : NAs introduced by coercion
2022-08-25 23:58:43: ERROR running train/test for predictor 'GLM' and group 'MSTr': 
 NA/NaN/Inf in foreign function call (arg 5)
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: cv.glmnet(data.matrix(Xtrain), Ytrain, alpha = 0.999, type.measure = "auc", family = "binomial") at Code/05_predictors.R:53
4: glmnet(x, y, weights = weights, offset = offset, lambda = lambda, ...)
5: lognet(x, is.sparse, ix, jx, y, weights, offset, alpha, nobs, nvars, jd, vp, cl, 
     ne, nx, nlam, flmin, ulam, thresh, isd, intr, vnames, maxit, kopt, family)
Error in lognet(x, is.sparse, ix, jx, y, weights, offset, alpha, nobs,  : 
  NA/NaN/Inf in foreign function call (arg 5)
2022-08-25 23:58:43: Running predictor 'RF' for group 'MSTr'.
2022-08-25 23:58:43: CV num 1
Warning in randomForest.default(Xtrain, Ytrain, Xtest) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
Warning in data.matrix(x) : NAs introduced by coercion
Warning in data.matrix(xtest) : NAs introduced by coercion
2022-08-25 23:58:43: ERROR running train/test for predictor 'RF' and group 'MSTr': 
 NA/NaN/Inf in foreign function call (arg 1)
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: randomForest(Xtrain, Ytrain, Xtest) at Code/05_predictors.R:6
4: randomForest.default(Xtrain, Ytrain, Xtest)
Error in randomForest.default(Xtrain, Ytrain, Xtest) : 
  NA/NaN/Inf in foreign function call (arg 1)
2022-08-25 23:58:43: Running predictor 'RF2' for group 'MSTr'.
2022-08-25 23:58:43: CV num 1
Warning in randomForest.default(Xtrain, Ytrain, Xtest, mtry = floor(sqrt(ncol(Xtest)))) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
Warning in data.matrix(x) : NAs introduced by coercion
Warning in data.matrix(xtest) : NAs introduced by coercion
2022-08-25 23:58:43: ERROR running train/test for predictor 'RF2' and group 'MSTr': 
 NA/NaN/Inf in foreign function call (arg 1)
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: randomForest(Xtrain, Ytrain, Xtest, mtry = floor(sqrt(ncol(Xtest)))) at Code/05_predictors.R:13
4: randomForest.default(Xtrain, Ytrain, Xtest, mtry = floor(sqrt(ncol(Xtest))))
Error in randomForest.default(Xtrain, Ytrain, Xtest, mtry = floor(sqrt(ncol(Xtest)))) : 
  NA/NaN/Inf in foreign function call (arg 1)
2022-08-25 23:58:43: Running predictor 'RF3' for group 'MSTr'.
2022-08-25 23:58:43: CV num 1
Warning in data.matrix(x) : NAs introduced by coercion
Warning in data.matrix(xtest) : NAs introduced by coercion
2022-08-25 23:58:43: ERROR running train/test for predictor 'RF3' and group 'MSTr': 
 NA/NaN/Inf in foreign function call (arg 1)
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: randomForest(Xtrain, factor(Ytrain), Xtest) at Code/05_predictors.R:20
4: randomForest.default(Xtrain, factor(Ytrain), Xtest)
Error in randomForest.default(Xtrain, factor(Ytrain), Xtest) : 
  NA/NaN/Inf in foreign function call (arg 1)
2022-08-25 23:58:43: Running predictor 'RFO' for group 'MSTr'.
2022-08-25 23:58:43: CV num 1
Warning in data.matrix(x) : NAs introduced by coercion
2022-08-25 23:58:43: ERROR running train/test for predictor 'RFO' and group 'MSTr': 
 NA/NaN/Inf in foreign function call (arg 1)
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: tune.randomForest(x = Xtrain, y = as.factor(Ytrain), mtry = mtrys, predict.func = predict.fun, 
     tunecontrol = tune.control(cross = 5, error.fun = function(Yt, Yp) -AUROC(Yp, 
         Yt))) at Code/05_predictors.R:35
4: tune("randomForest", train.x = x, train.y = y, ranges = ranges, ...)
5: do.call(method, c(list(train.x[train.ind[[sample]], ], y = train.y[train.ind[[sample]]]), 
     pars, list(...)))
6: randomForest(structure(list(MSFC.T25FW = c(3.85, 5.1, 4.65, 4, 3.95, 4.9, 4.8, 4.7, 
 4.2, 3.65, 6.25, 5.45, 4.55, 5.6, 5.2, 25, 4.35, 5.95, 4.75, 4.4, 4.25, 3.95, 5.6, 
 4.2, 3.6, 3.75, 10.1, 5.2, 4.1, 3.9, 4.95, 4.15, 5.05, 4.7, 5.35, 4.95, 4.05, 2.55, 
 3.4, 3.9, 8, 4.15, 4, 5.3, 4.6, 5.5, 6.55, 4.2, 4.2, 15.35, 4.9, 5.65, 4.45, 3.55, 
 4.9, 5.4, 4.9, 3.65, 4.1, 3.8, 5.3, 4.75, 4.1, 4.05, 5.35, 5.15, 6, 4.25, 5.15, 4.8, 
 3.75, 4.35, 4.3, 8.6, 5.05, 3.9, 6.15, 3.8, 5.9, 4.75, 4.45, 3.55, 3.5, 4.75, 2.9, 
 3.95, 4.2, 3.7, 4.95, 6.5, 4.2, 3.1, 3.5, 5.8, 3.1, 4.5, 4.05, 3.85, 3.5, 4.3, 4.75, 
 5.05, 3.8, 6.25, 4.25, 7.4, 3.7, 7.5, 3.4, 5.05, 4.1, 3.45, 3.95, 3.4, 9.7, 4.45, 
 5.7, 6.35, 5.55, 5.6, 4.75, 5.7, 4.5, 4.3, 4.8, 2.9, 5.2, 5.25, 3.9, 6.45, 7.2, 4.35, 
 4, 5.05, 4.25, 5.65, 6.55, 4.3, 3.55, 4.65, 7.65, 3.9, 5.6, 3.9, 5.85, 6.05, 3.5, 
 4.05, 4.3, 6.35, 3.3, 4.8, 3.75, 4.85, 4.95, 4.45, 4.05, 5.55, 5.7, 4.25, 4.35, 5.45, 
 5.25, 2.8, 4.95, 4.35, 3.35, 3.65, 4.65, 4.4, 4, 7.35, 4.45, 3.75, 4.35, 4.6, 4.05, 
 5.9, 4.4, 4.95, 3.8, 3.75, 4.45, 4.55, 4.4, 3.6, 6.15, 4.75, 4.1, 5.7, 3.9, 5.4, 
 3.85, 6, 5.75, 4.05, 5.9, 5.6, 4, 6.15, 3.5, 5.75, 4.65, 4.5, 7.4, 5.05, 5.65, 3.3, 
 4.65, 5.2, 5.35, 3.35, 4.15, 3.95, 4.6, 3.55, 4.4, 5.2, 3.45, 8.65, 6.3, 3.95, 5.3, 
 3.2, 4, 4.95, 6.75, 3.55, 4.25, 4.25, 4.4, 4.35, 4.6, 4.9, 4.55, 10.55, 3.7, 7.05, 
 6.15, 4.05, 4.1, 7.9, 4.7, 5.65, 4.35, 4.65, 6.55, 4.9, 5.1, 4.6, 4.15, 4.3, 6.2, 
 4.5, 5, 3.9, 6.7, 5.05, 5.1, 3.8, 4.2, 3.55, 4.55, 5.85, 4.85, 6.1, 4.7, 6.1, 4.35, 
 4.6, 5, 4.6, 4.25, 3.9, 4.7, 5.1, 4.45, 4.8, 3.25, 2.95, 4.3, 3.95, 4.3, 4.6, 16.4, 
 4.45, 12.85, 4.2, 5.65, 3.4, 3.85, 4.75, 3.8, 5, 5.5, 2.9, 5.25, 3.5, 4.6, 5.3, 3.7, 
 5.7, 3.6, 5.1, 3.7, 5, 4.05, 4.85, 4.35, 3.2, 5.95, 7.1, 5.15, 3.75, 4.35, 3.8, 4.1, 
 2.9, 3.95, 4.05, 3.7, 5.05, 3.4, 4.95, 3.85, 3.4, 3.15, 3.8, 5.85, 4.05, 4.1, 3.65, 
 4.25, 4.1, 4.85, 5.2, 5.7, 4.3, 3.9, 5, 4.25, 3.25, 3.6, 4.1, 7.85, 5.15, 4.8, 4, 
 5.4, 4.2, 4, 4.45, 4.65, 3.45, 4.55, 7.45, 3.9, 3.6, 4.2, 4.75, 4.55, 3.5, 5.75, 
 4.55, 3.85, 4.85, 3.8, 4.75, 4.9, 6.7, 4.85, 4.85, 4.15, 3.95, 5.35, 4.05, 5.65, 
 3.7, 14, 4, 4.75, 3.7, 4.7, 3.65, 3.85, 3.3, 4.15, 4.95, 3.45, 4.7, 3.45, 3.55, 6.35, 
 4.9, 2.65, 5.3, 4.4, 4.65, 4.45, 4.1, 4.8, 3.85, 3.55, 4.35, 4.65, 6.45, 4.45, 4.35, 
 4.85, 4.25, 6.25, 4.75, 5.8, 5.75, 3.85, 4.9, 3.65, 3.4, 4.45, 3.4, 3.95, 4.6, 4.25, 
 3.5, 5.45, 3.2, 3.85, 3.95, 4, 9.3, 4.05, 3.6, 3.15, 12.9, 4.55, 3.85, 5.05, 4.25, 
 3.85, 4.65, 4.55, 4.15, 3.1, 4.55, 5.3, 4.45, 4, 5.9, 4.3, 4.15, 3.95, 6.1, 5.25, 
 5.15, 4.15, 4.85, 4.95, 4.6, 4.2, 4.15, 5.1, 3.85, 4.55, 6.5, 4.2, 3.45, 3.8, 4.55, 
 6.6, 4.05, 4.35, 5.8, 4.25, 6, 4.95, 4.05, 6.75, 3.55, 4.5, 4.75, 3.5, 4.75, 3.45, 
 9.5, 5.1, 9.95, 4.35, 3.6, 6.8, 3.65, 4.25, 6.2, 4.35, 3.45, 4.05, 3.6, 4.55, 5, 
 3.05, 6.45, 5.15, 4.7, 4.3, 4.15, 5.7, 4.5, 3.9, 3.7, 5.05, 4.3, 3.8, 3.7, 3.7, 5.55, 
 4.25, 5.4, 3.7, 21.55, 5.1, 3.8, 4.85, 8.45, 5.25, 3.95, 4.55, 5, 4.75, 4.35, 3.55, 
 5.6, 4.4, 4.5, 6.4, 4.15, 4.1, 3.9, 4, 4.4, 4.65, 4.95, 5.45, 4.15, 5.05, 5.35, 4, 
 5.6, 4.75, 3.5, 6.15, 5.15, 5.15, 4.35, 3.9, 5.5, 6.7, 3.2, 5.5, 5.95, 3.1, 5.3, 
 5.65, 3.85, 4, 5.25, 4.25, 3.4, 6.85, 3.55, 7.45, 4.6, 3.7, 4.05, 6.1, 4, 4.2, 6.35, 
 3.4, 3.45, 4.05, 4.45, 5.75, 5.3, 6.15, 3.85, 4.2, 3.5, 3.5, 4.9, 2.9, 5.7, 3.9, 
 5.25, 5.2, 5.6, 5.55, 3.55, 4.8, 9.75, 4.45, 3.8, 3.05, 3.95, 4, 5.95, 4.1, 4.05, 
 3.95, 4.35, 4.25, 5.25, 4.2, 5.8, 4.3, 4.5, 4.2, 4.3, 4.15, 12.2, 4.05, 5.8, 4.6, 
 4.4, 4.9, 4.55, 3.95, 4.1, 3.5, 4.15, 5.4, 4.25, 4.15, 6.05, 4.25, 4.55, 4.05, 7.4, 
 9.15, 4.9, 5.45, 5.15, 4.75, 9.15, 4.35, 4.1, 3.9, 4.15, 5, 5.05, 5.85, 4.15, 4.75, 
 3.9, 4, 5.1, 5.8, 3.9, 3.9, 3.95, 4.75, 4.75, 4.1, 3.95, 4.65, 3.65, 16.45, 5.75, 
 6.4, 3.45, 3, 4.2, 5.2, 3.9, 10.1, 5.65, 3.8, 4.05, 7.5, 5.05, 4.5, 5.9, 5.1, 4.45, 
 4.2, 4.4, 6.3, 4.05, 4.3, 3.45, 5.05, 5, 18.15, 5, 4.25, 5.3, 5.4, 4.05, 5.25, 4.95, 
 3.65, 5.2, 6.6, 4.15, 11, 5.65, 5.05, 4.15, 4.9, 4.1, 5.5, 5.15, 3.7, 4.05, 4.2, 
 4.75, 4.5, 3.75, 3.1, 5.4, 4.1, 5.1, 5.15, 3.85, 5, 4.75, 5.2, 3.8, 7.05, 6.35, 6.65, 
 3.95, 4.75, 3.45, 4.55, 5.95, 2.95, 3.85, 4.7, 7.2, 6.25, 4.5, 5.1, 3.6, 5.05, 3.7, 
 5.3, 3.7, 4.9, 6.35, 4.35, 3.85, 4, 4.15, 4.6, 5.05, 4.45, 4.7, 3.75, 14.4, 4.7, 
 4.05, 4.75, 5.55, 4.5, 6, 4.55, 4.35, 3.9, 4.6, 5.5, 6, 5.55, 3.9, 4.15, 5.75, 8.1, 
 3.75, 3.75, 3.85, 4.25, 3.9, 3.8, 5.15, 6.3, 4.7, 5.05, 5.7, 3.8, 4.15, 3.65, 4.3, 
 3.85, 4.2, 4.15, 5.5, 4.6, 5.7, 3.85, 4.9, 6, 3.5, 4.25, 4.35, 15.3, 4.85, 4.1, 4, 
 5.95, 7, 4.4, 6.85, 9.1, 4, 4.15, 5.1, 5.5, 5.3, 3.55, 4.75, 3.6, 4, 6.05, 4.95, 
 3.6, 4.7, 6.8, 3.45, 4.25, 5.65, 7.4, 5.3, 5.7, 17.35, 4.7, 4.4, 6.3, 5.55, 3.2, 
 6.1, 3.8, 4.5, 4.95, 4.35, 7.7, 4, 4, 4.55, 4.15, 3.85, 4.1, 4.3, 4.35, 5.15, 6.45, 
 6.7, 4.15, 3.95, 3.7, 4.15, 5.95, 4.85, 5.1, 4, 4, 5.2, 6.1, 4.45, 3.95, 5, 4.3, 
 4, 4.15, 3.7, 5, 5.05, 5.4, 3.85, 4.1, 3.65, 6.7, 4.45, 4.35, 4.1, 3.8, 9.95, 4.7, 
 5.1, 4.3, 3.85, 4.75, 6.5, 6.7, 5.85, 4.45, 9.1, 5, 7.3, 4.6, 5.75, 5.9, 12.2, 4.25, 
 2.5, 5.05, 5.05, 4.25, 3.85, 3.85, 4.5, 3.8, 4.35, 4.6, 4.75, 8.1, 4.6, 4.2, 5.05, 
 6.25, 4.65, 4.2, 6.05, 7.3, 4.35, 4.6, 3.9, 4.15, 8.05, 3.6, 3.9, 4.85, 5.1, 3.6, 
 4.55, 4, 3.95, 3.9, 4.9, 5.55, 6.05, 4.2, 4.05, 7.15, 6.5, 3.95, 5.45, 4.05, 5.3, 
 5.2, 4.8, 6.7, 5.35, 3.8, 4.65, 4.6, 6.45, 4.8, 3.85, 6.4, 5.45, 3.9, 6.05, 5.35, 
 4.95, 4.7, 5.3, 5.4, 3, 3.75, 5.25, 4.5, 4.5, 4.05, 5.2, 5.4, 5.55, 4.6, 4.9, 4.2, 
 4.8, 5.35, 5.2, 4.3, 5.65, 4.75, 4.6, 4.65, 5, 4.2, 4.85, 4.5, 6, 4.85, 3.6, 4.95, 
 4.15, 4.25, 3.95, 3.7, 2.7, 4.55, 4.75, 6.8, 3.35, 4.25, 4.95, 3.7, 3.5, 5.2, 5.15, 
 5.8, 4.05, 4.5, 5.1, 5.2, 4.65, 4.2), MSFC.NHPT = c(15.75, 23.95, 22.475, 18.575, 
 20.45, 18.95, 22.25, 23.2, 17.5, 16.425, 20.5, 19.375, 16.55, 28.15, 19.675, 19.55, 
 21.15, 21.325, 17.45, 21.4, 17.05, 22.2, 20.175, 19.65, 25.1, 20.9, 31.8, 22.525, 
 19.4, 15.7, 18.7, 20.225, 19.575, 17.2, 19.25, 37.25, 16.15, 17, 19.2, 18.2, 20.075, 
 19.725, 17.725, 28.375, 22.15, 30.85, 21.5, 23, 18.925, 29.2, 20.525, 43.15, 23.175, 
 18.125, 17.85, 24.1, 19.125, 20.8, 17.8, 17.6, 21.825, 18.725, 19.325, 20.275, 34.8, 
 24.2, 26.775, 20.625, 20.925, 21.375, 19.05, 17.85, 20.875, 27.425, 30.775, 17.9, 
 20, 20.45, 22.925, 18.625, 18.775, 17.475, 18.75, 18.925, 17.05, 18.525, 22.875, 
 17.825, 21.225, 17.75, 19.7, 20.95, 15.8, 22.475, 17.875, 21.795, 19.625, 21.425, 
 18.95, 22.95, 19.25, 19.65, 17.275, 32.05, 18.075, 24.2, 19.65, 31.95, 18.05, 17.2, 
 16.225, 19.425, 21.4, 18.45, 28, 22.975, 20.2, 17.45, 21.55, 24.45, 20.975, 24.45, 
 18.575, 18.125, 15.15, 20.425, 17.5, 30.6, 15.725, 23.225, 24.8, 19.55, 18.05, 21.775, 
 17.875, 34.25, 18.05, 15.2, 20, 20.975, 18.025, 18.95, 17.875, 24.325, 20.125, 27.275, 
 19.275, 16.825, 21.35, 21.775, 19.95, 24.825, 16.8, 23.4, 20.175, 24.65, 18.9, 20.7, 
 18.825, 19.775, 17.05, 26.125, 33.6, 14.625, 19.925, 17.35, 19.25, 17.425, 17.45, 
 17.275, 17.575, 25.725, 18.475, 19.375, 17.7, 25.35, 19.375, 19.175, 20.15, 24.05, 
 19.85, 18.725, 21.1, 20.325, 20.2, 24.95, 30.475, 16.825, 21.35, 27.05, 18.925, 17.675, 
 29.05, 22.175, 25.775, 21.225, 19.775, 19.6, 20.325, 28.15, 15.25, 20.8, 21.475, 
 21.75, 21.15, 25.85, 16.475, 18.325, 21.925, 31.45, 28.425, 18.825, 17.825, 16.675, 
 24.025, 18.75, 19.575, 19.75, 14.35, 25.425, 34.05, 18.4, 18.975, 16.325, 17.05, 
 18.575, 40.9, 21.825, 18.975, 17.475, 18.3, 21.725, 16.1, 21.575, 19.1, 27.675, 18.5, 
 23.4, 33.675, 20.55, 16.8, 27.375, 19.175, 25.1, 19, 21.7, 27.225, 23.725, 17.45, 
 19.5, 20.175, 19.825, 30.1, 16.625, 29.525, 15.65, 21.275, 31.275, 21.975, 18.85, 
 19.275, 19.75, 22.85, 29.525, 22.2, 30.825, 16.45, 23.35, 17.025, 18.9, 21.225, 18.7, 
 15.275, 21.75, 17.925, 25.875, 24.15, 17.9, 21.675, 21.475, 18.725, 18.2, 18.85, 
 22.725, 18.175, 16.075, 18.825, 24.6, 18.775, 19.475, 22.025, 38.6, 18.125, 22.275, 
 23.925, 15.55, 19.125, 15.875, 20.25, 23.85, 17.15, 17.375, 19.525, 24.525, 18.3, 
 20.7, 22.175, 28.525, 18.8, 16.85, 24.275, 36.7, 21.85, 19.45, 21.975, 18.15, 15.25, 
 15.625, 21.175, 23.475, 16.625, 21.875, 20.175, 15.375, 22.975, 18.775, 17.45, 19.4, 
 22.05, 23.25, 19.2, 17.85, 20.05, 18.95, 16.725, 19.2, 22.175, 24.1, 17.475, 22.55, 
 15.675, 20.775, 18.075, 19.5, 19.6, 18.9, 20.6, 16.75, 18.85, 20.9, 16.6, 20.925, 
 20.675, 16.175, 16.225, 18.075, 17.225, 20.625, 19.175, 22.025, 21.825, 21.525, 20.675, 
 24.275, 23.7, 18.1, 17.7, 20.4, 14.2, 32.05, 22.15, 16.725, 17.1, 21.55, 21.8, 22.775, 
 26.475, 20.5, 41.375, 19.575, 19.675, 18.525, 18.25, 17.925, 19.975, 15.425, 15.925, 
 23.85, 18.15, 17.425, 17.775, 18.625, 48.25, 20.2, 20.875, 16.7, 26.25, 18.025, 25.45, 
 18.175, 21.2, 17.45, 18, 17.5, 21, 26.925, 25.975, 15.825, 27.725, 17.5, 34.4, 21.3, 
 24.5, 45.375, 18.975, 29.225, 18.575, 16.475, 16.65, 21.55, 21.45, 21.05, 23.825, 
 20.325, 19.875, 18.5, 23.325, 17.325, 15.175, 29.425, 27.7, 22.65, 21.2, 36.275, 
 22.775, 20.4, 20.875, 20.275, 17.8, 47.025, 27.425, 17.65, 21.725, 19.2, 19.7, 16.85, 
 16.45, 16.975, 22.25, 24.45, 19.075, 25.425, 29, 17.4, 18.55, 26.6, 16.275, 21.375, 
 22.4, 16.7, 19.4, 18.475, 20, 21.2, 17.625, 19.275, 16.875, 22.15, 24.15, 17.65, 
 19.075, 19.925, 20.925, 30.675, 15.75, 20.175, 27.125, 21.375, 19.7, 16.225, 20.2, 
 24.675, 18.875, 27.65, 17.375, 22.425, 16.8, 25, 17.175, 23.1, 19.625, 21.55, 18.5, 
 16.875, 17.9, 21.125, 19.6, 22.075, 21.825, 26.975, 18.175, 21.525, 16.85, 20.375, 
 22.15, 25.4, 21.425, 16.125, 23.075, 21.8, 19.275, 19, 18.25, 19.425, 18.275, 21.975, 
 19.75, 25.5, 33.9, 18.975, 30.475, 37.075, 31.45, 17.675, 17.7, 22.875, 23.375, 21.275, 
 18.975, 19.875, 23.975, 18.225, 32.35, 18.65, 20.35, 18.1, 21.875, 27.6, 28.075, 
 21.95, 20.875, 19.55, 28, 21.75, 20.825, 21.475, 19.275, 31.925, 21.075, 17.325, 
 15.825, 18.925, 20.1, 24.35, 24.9, 18.375, 20.15, 24.4, 22.95, 27.425, 24.25, 17.375, 
 21.325, 22.125, 19.475, 21.4, 23.025, 18.925, 22.55, 27.475, 19.275, 20.95, 26.625, 
 17.275, 22.25, 21.075, 19.025, 17.575, 24.975, 22.25, 28.35, 86.275, 25.05, 21.25, 
 18.35, 23.25, 21.725, 21.925, 19.25, 20.475, 19.725, 15.625, 18.65, 17.15, 25.4, 
 16.1, 18.2, 51.25, 18.8, 18.225, 20.45, 18.7, 19.525, 19.85, 20.3, 23.175, 22.425, 
 18.9, 19.625, 22.175, 20.275, 37.45, 18.25, 20.725, 17.675, 14.425, 18.7, 24.85, 
 18.775, 25.025, 16.75, 18.7, 21.225, 20.075, 20.15, 18.225, 21.425, 16.575, 17.725, 
 20.8, 25.275, 18.125, 18.625, 20.775, 21.45, 30.75, 24.5, 26.325, 25.225, 18.575, 
 17.775, 25.825, 24.05, 15.775, 18.7, 19.5, 16.975, 17, 19.8, 20.95, 22.725, 21.125, 
 21.25, 21.225, 24.3, 18.275, 19.525, 21.95, 19.725, 18.2, 21.025, 17.6, 19, 17.1, 
 39.675, 23.675, 30.825, 16.2, 16.525, 18.9, 17.175, 17.1, 23.675, 16.15, 24.125, 
 19.725, 17.675, 26.55, 16.225, 21.95, 20.775, 17.45, 17.025, 16.55, 26.475, 17.65, 
 19.15, 17.825, 23.35, 23.75, 44.1, 21.025, 18.2, 20.575, 21.1, 16.75, 20.45, 18.075, 
 19.1, 18.625, 28.775, 15.15, 21.35, 22.45, 22.35, 20.075, 17.8, 34.025, 19.25, 22.675, 
 18.5, 18.05, 17.75, 20.4, 42.25, 21.05, 17.275, 21.675, 21.825, 30, 19.05, 18.05, 
 19.125, 19.75, 18.5, 18.3, 25.2, 29.375, 19.15, 16.425, 25.475, 20.675, 19.05, 30.025, 
 18.5, 21.525, 23.25, 40.125, 43, 23.675, 18.075, 20.05, 20.5, 17.775, 23.525, 19.625, 
 19.175, 22.325, 15.675, 16.95, 16.925, 20.325, 18.075, 21.975, 24.125, 17.85, 19.175, 
 18.225, 29.7, 19.45, 21, 27, 16.4, 25.95, 19.65, 21.15, 22.775, 19.525, 18.9, 26.35, 
 25.45, 19.9, 21.275, 28.225, 26.8, 20.7, 17.475, 20.225, 26.425, 18.05, 21.95, 21.05, 
 26.625, 28.125, 19.4, 31.8, 20.7, 17.15, 21.2, 22.675, 17.025, 17.625, 22.575, 17.4, 
 18.45, 19.15, 20.325, 24.5, 20.9, 17.675, 16.275, 23.4, 19.125, 17.975, 16.025, 21.15, 
 16.975, 20.75, 21.725, 19.775, 28.375, 16.95, 18.55, 19.275, 17.925, 43.525, 22.875, 
 15.85, 18.1, 22.75, 21.45, 22.3, 22.025, 17.225, 24.2, 21.825, 19.775, 18.775, 54, 
 21.2, 31.475, 19.425, 21.175, 18.375, 25.6, 22.7, 16.075, 31.275, 20.85, 19.375, 
 20.95, 21.725, 21.975, 17.025, 16.45, 21.4, 19.65, 19.125, 19.025, 20.9, 21.1, 18.875, 
 24.525, 19.725, 37.275, 21.4, 15.6, 16.325, 19.15, 21, 20.725, 15.225, 20.5, 18.225, 
 37.05, 19.05, 15, 34.7, 21.1, 19.05, 19.95, 17.4, 19.375, 18.475, 23.1, 18.3, 19.275, 
 21.65, 27.55, 23.05, 22.5, 20.6, 19.825, 25.975, 19.525, 18.1, 20, 17.525, 18.025, 
 24.575, 32.675, 29.025, 29.425, 30.075, 55.5, 32.55, 19.45, 25.35, 17.75, 20.225, 
 19.4, 17.225, 21.55, 20.075, 17.95, 18.25, 17.225, 18.7, 22.125, 21.175, 16.225, 
 16.925, 19.475, 16.7, 18.65, 38.925, 22.15, 19.175, 17.275, 21.975, 19.55, 18.575, 
 21.25, 18, 18.125, 22.35, 19.475, 17.7, 23.55, 18.125, 17.575, 18.15, 27.25, 18.175, 
 15.4, 24.475, 44.95, 17.625, 16.275, 19.875, 19.85, 30.15, 20.5, 23.775, 18.05, 25.425, 
 20.875, 18.6, 18.05, 31.05, 20.9, 18.375, 18.175, 19.625, 17.4, 18.575, 19.7, 20.725, 
 18.575, 23.1, 19.25, 19.15, 18.2, 17.225, 21.55, 15.725, 18.35, 18.3, 20.425, 18.225, 
 19.625, 21.675, 18.725, 19.55, 16.65, 21.2, 16.625, 19.375, 16.625, 19.6, 18.05, 
 24.1, 19.075, 18.075, 22.3, 27.15, 13.95, 25.975, 18.75, 22.15, 27.2, 16.725, 22.2, 
 16.675, 29.825, 22.85, 21.15, 17.225, 19.8, 16.225, 27.425, 15.825, 14.925, 17.525, 
 15.65, 23.375, 18.575, 43.575, 31.225, 18.25, 17.875, 17.85, 17.8, 20.925, 17.8), 
     Treatments.DMTname = c("None", "Rebif", "Copaxone", "None", "None", "None", "Betaseron", 
     "None", "None", "None", "None", "Avonex", "None", "Rebif", "None", "Cellcept", 
     "Avonex", "Avonex", "None", "Rebif", "Avonex", "Tysabri", "None", "Rebif", "Rebif", 
     "Rituximab", "Betaseron + Copaxone", "None", "None", "Avonex", "Avonex", "None", 
     "None", "None", "Rebif", "Rebif + Gilenya", "Avonex", "None", "None", "Rebif", 
     "Rebif", "None", "None", "None", "Copaxone", "Rebif", "None", "Rebif", "None", 
     "None", "Rebif", "None", "Copaxone", "None", "None", "Copaxone", "None", "Rebif", 
     "None", "Copaxone", "None", "Avonex", "None", "Avonex", "Tysabri", "Copaxone", 
     "Rebif", "Copaxone", "Avonex", "Avonex + Rituximab", "Cellcept", "None", "Tysabri", 
     "None", "Rebif", "Rebif", "Betaseron", "Copaxone", "Betaseron", "None", "Copaxone", 
     "None", "None", "None", "None", "Avonex", "Rebif", "Rebif", "Rebif", "Betaseron", 
     "Rebif", "None", "Avonex", "None", "Avonex", "Avonex", "Tysabri", "Avonex", "Copaxone", 
     "Avonex", "Copaxone", "None", "Avonex", "None", "None", "None", "None", "Tysabri", 
     "None", "Betaseron", "None", "None", "Betaseron", "Avonex", "None", "Rebif", 
     "Avonex", "Tysabri", "Betaseron", "Copaxone", "Copaxone + Rebif", "Copaxone", 
     "Avonex", "None", "Cellcept", "Rebif", "None", "Rituximab", "Rebif", "Rebif + Imuran", 
     "None", "None", "None", "Rebif", "Avonex", "Copaxone", "Avonex", "Avonex", "Rebif", 
     "None", "Avonex", "None", "None", "None", "None", "None", "None", "None", "Avonex", 
     "None", "Copaxone", "Avonex", "Copaxone", "None", "None", "None", "Avonex", "None", 
     "Betaseron", "Betaseron", "None", "Betaseron", "Copaxone", "Avonex", "Copaxone", 
     "Tysabri", "Copaxone", "None", "Avonex", "None", "None", "Avonex", "None", "Avonex", 
     "None", "Rebif", "None", "None", "Avonex", "Betaseron", "Avonex", "Avonex", "Rebif", 
     "None", "Avonex", "Betaseron + Methotrexate", "Betaseron", "Avonex", "Copaxone", 
     "Rebif", "None", "None", "Rebif", "Copaxone", "None", "Copaxone", "Tysabri", 
     "Rebif", "Betaseron", "None", "Avonex", "Betaseron", "Rebif", "Betaseron", "None", 
     "Avonex", "Avonex", "Avonex", "Rebif", "Rebif", "Avonex + Methotrexate", "Copaxone", 
     "Rebif", "None", "None", "None", "None", "Rebif", "None", "Rebif + Imuran", "None", 
     "None", "None", "Avonex", "Betaseron", "None", "Aubagio + Gilenya", "Copaxone", 
     "None", "None", "None", "Copaxone", "Avonex", "Rebif", "Avonex", "Rebif", "Avonex", 
     "Avonex", "None", "None", "Avonex", "None", "None", "Copaxone", "Copaxone", "Copaxone", 
     "None", "Copaxone", "None", "Rebif", "Avonex", "None", "None", "None", "Rebif", 
     "None", "None", "Avonex", "Avonex", "None", "Avonex", "None", "None", "None", 
     "None", "Rebif", "None", "None", "Avonex", "Avonex", "Avonex", "Avonex", "Avonex", 
     "None", "Rebif", "Rebif", "Betaseron", "None", "Betaseron", "Avonex", "Copaxone", 
     "Copaxone", "Avonex", "None", "None", "Copaxone", "Tysabri", "Tysabri", "None", 
     "Rebif", "Rebif", "Rebif + Gilenya", "None", "None", "None", "None", "Avonex", 
     "None", "Rebif", "Rituximab", "None", "None", "None", "None", "Copaxone", "Rebif", 
     "Copaxone", "Avonex", "Betaseron", "None", "None", "Copaxone", "None", "None", 
     "Rebif", "Rebif", "Avonex", "None", "Avonex", "Betaseron", "Betaseron", "None", 
     "Avonex", "Avonex", "Rebif", "Betaseron", "Copaxone", "Copaxone", "Rebif", "Betaseron", 
     "None", "None", "None", "Tysabri", "None", "None", "Avonex", "Avonex", "Copaxone", 
     "Avonex", "None", "None", "None", "None", "Rebif", "None", "None", "Betaseron", 
     "Betaseron", "Rebif", "Copaxone", "Avonex", "Copaxone", "None", "Avonex", "None", 
     "Avonex", "None", "Copaxone", "None", "None", "Avonex", "None", "Copaxone", "Avonex", 
     "Betaseron", "None", "Rebif", "Avonex", "Rebif", "Rebif", "None", "Avonex", "Betaseron", 
     "None", "Copaxone", "Betaseron", "Copaxone", "None", "None", "None", "Rebif", 
     "None", "None", "None", "None", "None", "Betaseron", "None", "None", "Rebif", 
     "None", "Avonex", "None", "Rebif", "Cellcept", "Rebif", "Avonex", "Copaxone", 
     "Betaseron", "None", "None", "None", "None", "Betaseron", "Avonex", "Rebif", 
     "None", "None", "None", "Avonex", "Avonex", "None", "Rebif", "None", "Copaxone", 
     "Avonex", "None", "None", "Betaseron", "None", "Avonex", "Rebif", "Rebif", "Avonex", 
     "Rebif", "Copaxone", "Avonex", "Copaxone", "Rituximab", "Copaxone", "Rebif", 
     "None", "None", "None", "Copaxone", "None", "None", "Copaxone", "None", "Rebif", 
     "None", "Rebif", "None", "None", "Copaxone", "Copaxone", "None", "Avonex", "None", 
     "None", "None", "Rebif", "Betaseron", "None", "Avonex", "None", "None", "Copaxone", 
     "None", "None", "Betaseron", "Rebif", "Copaxone", "None", "None", "Avonex", "None", 
     "None", "Betaseron", "None", "None", "Betaseron", "Betaseron", "Cellcept", "Avonex", 
     "None", "None", "None", "None", "Tysabri", "Avonex", "Betaseron", "Rebif", "None", 
     "Tysabri", "None", "Avonex", "Betaseron", "None", "None", "None", "Rebif", "None", 
     "Avonex", "Avonex", "Avonex", "Copaxone", "Rebif", "Tysabri", "Avonex", "Avonex", 
     "None", "Cellcept", "None", "None", "Copaxone", "None", "Avonex", "None", "None", 
     "Rebif", "Avonex", "None", "Copaxone", "Avonex", "Rebif", "None", "Rebif", "Copaxone", 
     "Rebif", "Betaseron", "Avonex", "None", "Avonex", "None", "Avonex", "None", "Betaseron", 
     "None", "Rebif", "Copaxone", "Rebif", "None", "Avonex", "Rebif", "None", "Rebif", 
     "Betaseron", "Copaxone", "Betaseron", "Rebif", "Rebif", "Avonex", "None", "None", 
     "Copaxone", "Copaxone", "None", "None", "Gilenya", "Rituximab", "Copaxone", "Avonex", 
     "Rebif", "None", "None", "Copaxone", "Copaxone", "Rebif", "Avonex", "None", "None", 
     "Betaseron", "None", "None", "None", "Copaxone", "None", "Rebif", "None", "None", 
     "Avonex", "Rebif", "None", "None", "None", "Rebif", "None", "None", "Rituximab", 
     "Betaseron", "Avonex", "Betaseron", "Avonex", "Copaxone", "Rebif", "None", "None", 
     "None", "Betaseron", "None", "None", "Gilenya", "Copaxone", "None", "None", "Avonex", 
     "Avonex", "None", "Rebif", "Betaseron", "Rebif", "Copaxone", "Avonex", "Copaxone", 
     "None", "None", "None", "None", "None", "None", "Copaxone", "Rebif", "Betaseron", 
     "Avonex", "None", "Copaxone", "Rebif", "Copaxone", "None", "Avonex", "Avonex", 
     "None", "Rebif", "None", "Rebif", "None", "Avonex", "None", "None", "Avonex", 
     "Avonex", "Copaxone", "Rebif", "Rebif", "None", "None", "None", "None", "Betaseron", 
     "Rebif", "Rebif", "Rebif", "None", "Avonex", "Betaseron", "Avonex", "None", "Tysabri", 
     "None", "Avonex", "Rebif", "Avonex", "Copaxone", "Copaxone", "Avonex", "None", 
     "None", "None", "Copaxone", "None", "None", "None", "None", "Rebif", "Rebif", 
     "None", "Copaxone", "Rebif", "Avonex", "Avonex", "Copaxone", "Cellcept", "Rebif + Imuran", 
     "Copaxone", "Avonex", "Rebif", "Rebif + Copaxone", "Avonex", "Copaxone", "Avonex", 
     "Copaxone", "Copaxone", "Rebif + Imuran", "None", "Betaseron", "Avonex", "None", 
     "None", "None", "Avonex", "None", "Avonex", "Avonex + Rituximab", "None", "None", 
     "Betaseron", "None", "Copaxone", "Rebif", "Avonex", "Copaxone", "Copaxone", "None", 
     "Avonex", "None", "None", "None", "Rebif", "None", "None", "None", "None", "None", 
     "Rebif", "None", "Avonex", "Betaseron", "Rebif", "Avonex", "None", "Avonex", 
     "None", "Betaseron", "None", "Rebif", "Avonex", "Copaxone", "None", "None", "None", 
     "Avonex", "Rebif", "Copaxone", "Tysabri", "None", "None", "Gilenya", "Avonex", 
     "None", "None", "Betaseron", "Rebif", "None", "Copaxone", "None", "None", "None", 
     "None", "None", "Rebif", "Avonex", "Avonex", "Rebif", "Avonex", "None", "None", 
     "Rebif", "Avonex", "Avonex", "Betaseron", "Avonex", "Rebif", "None", "None", 
     "Avonex", "Betaseron", "None", "Avonex", "Rebif", "Betaseron", "Copaxone", "None", 
     "Copaxone", "Avonex", "Rebif", "Avonex", "Betaseron", "Betaseron", "Rebif", "None", 
     "None", "Copaxone", "Betaseron", "Betaseron", "Copaxone", "None", "Avonex", "Copaxone + Rebif", 
     "Betaseron", "None", "Betaseron", "Avonex", "Betaseron", "Copaxone", "None", 
     "Avonex", "Rebif", "None", "Imuran", "Betaseron", "None", "Rebif", "None", "None", 
     "None", "Rebif + Imuran", "Avonex", "Rebif", "None", "Betaseron", "None", "Avonex", 
     "Rebif", "Rebif + Gilenya", "Avonex", "None", "Rebif", "Rebif", "None", "Copaxone", 
     "Copaxone", "Avonex", "Rebif", "Avonex", "Rebif", "Copaxone", "Avonex", "Avonex", 
     "Avonex", "None", "Avonex", "None", "None", "Avonex", "None", "None", "None", 
     "None", "Avonex", "Avonex", "None", "None", "None", "None", "Copaxone", "None", 
     "Copaxone", "None", "Rituximab", "None", "None", "Copaxone", "None", "None", 
     "Avonex", "None", "Betaseron", "Rebif", "Rebif", "Avonex", "Tysabri", "Copaxone", 
     "Betaseron", "None", "Avonex", "Rebif", "Copaxone", "Avonex", "Avonex", "None", 
     "Betaseron", "None", "Copaxone", "None", "Rebif", "Tysabri", "None", "Rebif", 
     "Rebif", "Betaseron", "Rebif", "None", "Avonex", "None", "Avonex", "Rebif", "Betaseron", 
     "None", "None", "Rebif", "Rebif", "Tysabri", "Betaseron", "None", "Betaseron", 
     "Rebif", "None", "None", "None", "None", "None", "Betaseron", "None", "None", 
     "None", "None", "Avonex", "Rebif", "Copaxone", "Avonex", "None", "None", "Avonex", 
     "Avonex", "Copaxone", "None", "Avonex", "Avonex", "None", "None", "Copaxone", 
     "Betaseron + Rituximab", "None", "None", "Avonex", "Betaseron", "Rebif", "None", 
     "Avonex", "None", "Copaxone", "None", "Avonex", "Rebif", "Rebif", "None", "Avonex", 
     "Rebif", "Betaseron", "Rebif", "Rebif", "None", "None", "Copaxone", "None", "None", 
     "None", "Tysabri", "None", "Avonex", "Copaxone", "None", "None", "Copaxone", 
     "Copaxone", "None", "None", "Tysabri", "Rebif", "None", "None", "None", "Avonex", 
     "Copaxone", "Rebif", "None", "Rebif", "None", "None", "Rebif", "Rebif", "None", 
     "Copaxone", "Copaxone", "None", "Copaxone", "None", "None", "None", "Rebif", 
     "None", "None", "Rebif", "Rebif", "Avonex", "Copaxone", "Betaseron", "Avonex", 
     "Avonex", "None", "None", "None", "Avonex", "None", "Rebif", "Copaxone", "None", 
     "Rituximab", "None", "None", "Avonex", "None", "Avonex", "Copaxone", "Rebif", 
     "Rebif + Gilenya", "Copaxone", "None", "Avonex", "Avonex", "None", "Copaxone", 
     "None"), Treatments.nDMT = c(0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 
     1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 2, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 1, 1, 0, 
     0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 
     1, 2, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 
     1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 
     2, 1, 1, 0, 1, 1, 0, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 
     0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 
     0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 
     1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 
     1, 0, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
     1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 
     1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 
     0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
     1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 
     1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 
     1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
     0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 
     1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 
     0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 
     0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 
     0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 
     0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 
     0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
     1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 
     1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 
     1, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 0, 1, 1, 0, 0, 0, 1, 
     0, 1, 2, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 
     1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 
     0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 
     1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 0, 1, 1, 1, 1, 
     0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 1, 1, 0, 1, 
     1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 
     1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 
     1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
     0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 2, 0, 0, 
     1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 
     1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 
     0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 
     1, 1, 1, 2, 1, 0, 1, 1, 0, 1, 0), Treatments.hasIM = c(FALSE, TRUE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, 
     FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, 
     FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, 
     TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE), Treatments.hasIS = c(FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE), 
     Treatments.hasMA = c(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE), 
     Treatments.DMTcategory = c(0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 
     1, 0, 1, 1, 2, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 1, 1, 0, 0, 
     0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 1, 1, 1, 1, 
     2, 1, 0, 2, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
     1, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 
     1, 1, 0, 1, 1, 0, 2, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 
     0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2, 1, 0, 1, 0, 0, 1, 0, 
     1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 
     0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 
     0, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
     0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 
     0, 1, 1, 1, 1, 1, 0, 0, 1, 2, 2, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 
     0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 
     1, 0, 0, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 
     0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 
     1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 
     0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 
     0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 
     0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 0, 
     2, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 
     1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 
     1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 2, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 
     1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 2, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 
     1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 
     1, 1, 1, 0, 1, 1, 1, 0, 2, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 
     0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 
     1, 2, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 
     1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 1, 0, 0, 1, 1, 0, 
     1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 
     1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 
     1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 1, 1, 0, 1, 1, 
     1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 
     0, 2, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
     0, 1, 2, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 2, 1, 0, 1, 1, 0, 0, 0, 
     0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 2, 0, 0, 1, 
     1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 
     0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
     0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 2, 0, 0, 1, 0, 1, 
     1, 1, 2, 1, 0, 1, 1, 0, 1, 0)), .Names = c("MSFC.T25FW", "MSFC.NHPT", "Treatments.DMTname", 
 "Treatments.nDMT", "Treatments.hasIM", "Treatments.hasIS", "Treatments.hasMA", "Treatments.DMTcategory"
 ), row.names = c(NA, -1015L), class = c("tbl_df", "tbl", "data.frame")), y = structure(c(1L, 
 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 
 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 
 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 
 2L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 
 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 
 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 
 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 
 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 2L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 
 2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 
 2L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 
 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 
 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 
 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 
 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 
 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 
 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 
 1L, 2L, 2L, 1L, 2L, 1L), .Label = c("FALSE", "TRUE"), class = "factor"), mtry = 2)
7: randomForest.default(structure(list(MSFC.T25FW = c(3.85, 5.1, 4.65, 4, 3.95, 4.9, 
 4.8, 4.7, 4.2, 3.65, 6.25, 5.45, 4.55, 5.6, 5.2, 25, 4.35, 5.95, 4.75, 4.4, 4.25, 
 3.95, 5.6, 4.2, 3.6, 3.75, 10.1, 5.2, 4.1, 3.9, 4.95, 4.15, 5.05, 4.7, 5.35, 4.95, 
 4.05, 2.55, 3.4, 3.9, 8, 4.15, 4, 5.3, 4.6, 5.5, 6.55, 4.2, 4.2, 15.35, 4.9, 5.65, 
 4.45, 3.55, 4.9, 5.4, 4.9, 3.65, 4.1, 3.8, 5.3, 4.75, 4.1, 4.05, 5.35, 5.15, 6, 4.25, 
 5.15, 4.8, 3.75, 4.35, 4.3, 8.6, 5.05, 3.9, 6.15, 3.8, 5.9, 4.75, 4.45, 3.55, 3.5, 
 4.75, 2.9, 3.95, 4.2, 3.7, 4.95, 6.5, 4.2, 3.1, 3.5, 5.8, 3.1, 4.5, 4.05, 3.85, 3.5, 
 4.3, 4.75, 5.05, 3.8, 6.25, 4.25, 7.4, 3.7, 7.5, 3.4, 5.05, 4.1, 3.45, 3.95, 3.4, 
 9.7, 4.45, 5.7, 6.35, 5.55, 5.6, 4.75, 5.7, 4.5, 4.3, 4.8, 2.9, 5.2, 5.25, 3.9, 6.45, 
 7.2, 4.35, 4, 5.05, 4.25, 5.65, 6.55, 4.3, 3.55, 4.65, 7.65, 3.9, 5.6, 3.9, 5.85, 
 6.05, 3.5, 4.05, 4.3, 6.35, 3.3, 4.8, 3.75, 4.85, 4.95, 4.45, 4.05, 5.55, 5.7, 4.25, 
 4.35, 5.45, 5.25, 2.8, 4.95, 4.35, 3.35, 3.65, 4.65, 4.4, 4, 7.35, 4.45, 3.75, 4.35, 
 4.6, 4.05, 5.9, 4.4, 4.95, 3.8, 3.75, 4.45, 4.55, 4.4, 3.6, 6.15, 4.75, 4.1, 5.7, 
 3.9, 5.4, 3.85, 6, 5.75, 4.05, 5.9, 5.6, 4, 6.15, 3.5, 5.75, 4.65, 4.5, 7.4, 5.05, 
 5.65, 3.3, 4.65, 5.2, 5.35, 3.35, 4.15, 3.95, 4.6, 3.55, 4.4, 5.2, 3.45, 8.65, 6.3, 
 3.95, 5.3, 3.2, 4, 4.95, 6.75, 3.55, 4.25, 4.25, 4.4, 4.35, 4.6, 4.9, 4.55, 10.55, 
 3.7, 7.05, 6.15, 4.05, 4.1, 7.9, 4.7, 5.65, 4.35, 4.65, 6.55, 4.9, 5.1, 4.6, 4.15, 
 4.3, 6.2, 4.5, 5, 3.9, 6.7, 5.05, 5.1, 3.8, 4.2, 3.55, 4.55, 5.85, 4.85, 6.1, 4.7, 
 6.1, 4.35, 4.6, 5, 4.6, 4.25, 3.9, 4.7, 5.1, 4.45, 4.8, 3.25, 2.95, 4.3, 3.95, 4.3, 
 4.6, 16.4, 4.45, 12.85, 4.2, 5.65, 3.4, 3.85, 4.75, 3.8, 5, 5.5, 2.9, 5.25, 3.5, 
 4.6, 5.3, 3.7, 5.7, 3.6, 5.1, 3.7, 5, 4.05, 4.85, 4.35, 3.2, 5.95, 7.1, 5.15, 3.75, 
 4.35, 3.8, 4.1, 2.9, 3.95, 4.05, 3.7, 5.05, 3.4, 4.95, 3.85, 3.4, 3.15, 3.8, 5.85, 
 4.05, 4.1, 3.65, 4.25, 4.1, 4.85, 5.2, 5.7, 4.3, 3.9, 5, 4.25, 3.25, 3.6, 4.1, 7.85, 
 5.15, 4.8, 4, 5.4, 4.2, 4, 4.45, 4.65, 3.45, 4.55, 7.45, 3.9, 3.6, 4.2, 4.75, 4.55, 
 3.5, 5.75, 4.55, 3.85, 4.85, 3.8, 4.75, 4.9, 6.7, 4.85, 4.85, 4.15, 3.95, 5.35, 4.05, 
 5.65, 3.7, 14, 4, 4.75, 3.7, 4.7, 3.65, 3.85, 3.3, 4.15, 4.95, 3.45, 4.7, 3.45, 3.55, 
 6.35, 4.9, 2.65, 5.3, 4.4, 4.65, 4.45, 4.1, 4.8, 3.85, 3.55, 4.35, 4.65, 6.45, 4.45, 
 4.35, 4.85, 4.25, 6.25, 4.75, 5.8, 5.75, 3.85, 4.9, 3.65, 3.4, 4.45, 3.4, 3.95, 4.6, 
 4.25, 3.5, 5.45, 3.2, 3.85, 3.95, 4, 9.3, 4.05, 3.6, 3.15, 12.9, 4.55, 3.85, 5.05, 
 4.25, 3.85, 4.65, 4.55, 4.15, 3.1, 4.55, 5.3, 4.45, 4, 5.9, 4.3, 4.15, 3.95, 6.1, 
 5.25, 5.15, 4.15, 4.85, 4.95, 4.6, 4.2, 4.15, 5.1, 3.85, 4.55, 6.5, 4.2, 3.45, 3.8, 
 4.55, 6.6, 4.05, 4.35, 5.8, 4.25, 6, 4.95, 4.05, 6.75, 3.55, 4.5, 4.75, 3.5, 4.75, 
 3.45, 9.5, 5.1, 9.95, 4.35, 3.6, 6.8, 3.65, 4.25, 6.2, 4.35, 3.45, 4.05, 3.6, 4.55, 
 5, 3.05, 6.45, 5.15, 4.7, 4.3, 4.15, 5.7, 4.5, 3.9, 3.7, 5.05, 4.3, 3.8, 3.7, 3.7, 
 5.55, 4.25, 5.4, 3.7, 21.55, 5.1, 3.8, 4.85, 8.45, 5.25, 3.95, 4.55, 5, 4.75, 4.35, 
 3.55, 5.6, 4.4, 4.5, 6.4, 4.15, 4.1, 3.9, 4, 4.4, 4.65, 4.95, 5.45, 4.15, 5.05, 5.35, 
 4, 5.6, 4.75, 3.5, 6.15, 5.15, 5.15, 4.35, 3.9, 5.5, 6.7, 3.2, 5.5, 5.95, 3.1, 5.3, 
 5.65, 3.85, 4, 5.25, 4.25, 3.4, 6.85, 3.55, 7.45, 4.6, 3.7, 4.05, 6.1, 4, 4.2, 6.35, 
 3.4, 3.45, 4.05, 4.45, 5.75, 5.3, 6.15, 3.85, 4.2, 3.5, 3.5, 4.9, 2.9, 5.7, 3.9, 
 5.25, 5.2, 5.6, 5.55, 3.55, 4.8, 9.75, 4.45, 3.8, 3.05, 3.95, 4, 5.95, 4.1, 4.05, 
 3.95, 4.35, 4.25, 5.25, 4.2, 5.8, 4.3, 4.5, 4.2, 4.3, 4.15, 12.2, 4.05, 5.8, 4.6, 
 4.4, 4.9, 4.55, 3.95, 4.1, 3.5, 4.15, 5.4, 4.25, 4.15, 6.05, 4.25, 4.55, 4.05, 7.4, 
 9.15, 4.9, 5.45, 5.15, 4.75, 9.15, 4.35, 4.1, 3.9, 4.15, 5, 5.05, 5.85, 4.15, 4.75, 
 3.9, 4, 5.1, 5.8, 3.9, 3.9, 3.95, 4.75, 4.75, 4.1, 3.95, 4.65, 3.65, 16.45, 5.75, 
 6.4, 3.45, 3, 4.2, 5.2, 3.9, 10.1, 5.65, 3.8, 4.05, 7.5, 5.05, 4.5, 5.9, 5.1, 4.45, 
 4.2, 4.4, 6.3, 4.05, 4.3, 3.45, 5.05, 5, 18.15, 5, 4.25, 5.3, 5.4, 4.05, 5.25, 4.95, 
 3.65, 5.2, 6.6, 4.15, 11, 5.65, 5.05, 4.15, 4.9, 4.1, 5.5, 5.15, 3.7, 4.05, 4.2, 
 4.75, 4.5, 3.75, 3.1, 5.4, 4.1, 5.1, 5.15, 3.85, 5, 4.75, 5.2, 3.8, 7.05, 6.35, 6.65, 
 3.95, 4.75, 3.45, 4.55, 5.95, 2.95, 3.85, 4.7, 7.2, 6.25, 4.5, 5.1, 3.6, 5.05, 3.7, 
 5.3, 3.7, 4.9, 6.35, 4.35, 3.85, 4, 4.15, 4.6, 5.05, 4.45, 4.7, 3.75, 14.4, 4.7, 
 4.05, 4.75, 5.55, 4.5, 6, 4.55, 4.35, 3.9, 4.6, 5.5, 6, 5.55, 3.9, 4.15, 5.75, 8.1, 
 3.75, 3.75, 3.85, 4.25, 3.9, 3.8, 5.15, 6.3, 4.7, 5.05, 5.7, 3.8, 4.15, 3.65, 4.3, 
 3.85, 4.2, 4.15, 5.5, 4.6, 5.7, 3.85, 4.9, 6, 3.5, 4.25, 4.35, 15.3, 4.85, 4.1, 4, 
 5.95, 7, 4.4, 6.85, 9.1, 4, 4.15, 5.1, 5.5, 5.3, 3.55, 4.75, 3.6, 4, 6.05, 4.95, 
 3.6, 4.7, 6.8, 3.45, 4.25, 5.65, 7.4, 5.3, 5.7, 17.35, 4.7, 4.4, 6.3, 5.55, 3.2, 
 6.1, 3.8, 4.5, 4.95, 4.35, 7.7, 4, 4, 4.55, 4.15, 3.85, 4.1, 4.3, 4.35, 5.15, 6.45, 
 6.7, 4.15, 3.95, 3.7, 4.15, 5.95, 4.85, 5.1, 4, 4, 5.2, 6.1, 4.45, 3.95, 5, 4.3, 
 4, 4.15, 3.7, 5, 5.05, 5.4, 3.85, 4.1, 3.65, 6.7, 4.45, 4.35, 4.1, 3.8, 9.95, 4.7, 
 5.1, 4.3, 3.85, 4.75, 6.5, 6.7, 5.85, 4.45, 9.1, 5, 7.3, 4.6, 5.75, 5.9, 12.2, 4.25, 
 2.5, 5.05, 5.05, 4.25, 3.85, 3.85, 4.5, 3.8, 4.35, 4.6, 4.75, 8.1, 4.6, 4.2, 5.05, 
 6.25, 4.65, 4.2, 6.05, 7.3, 4.35, 4.6, 3.9, 4.15, 8.05, 3.6, 3.9, 4.85, 5.1, 3.6, 
 4.55, 4, 3.95, 3.9, 4.9, 5.55, 6.05, 4.2, 4.05, 7.15, 6.5, 3.95, 5.45, 4.05, 5.3, 
 5.2, 4.8, 6.7, 5.35, 3.8, 4.65, 4.6, 6.45, 4.8, 3.85, 6.4, 5.45, 3.9, 6.05, 5.35, 
 4.95, 4.7, 5.3, 5.4, 3, 3.75, 5.25, 4.5, 4.5, 4.05, 5.2, 5.4, 5.55, 4.6, 4.9, 4.2, 
 4.8, 5.35, 5.2, 4.3, 5.65, 4.75, 4.6, 4.65, 5, 4.2, 4.85, 4.5, 6, 4.85, 3.6, 4.95, 
 4.15, 4.25, 3.95, 3.7, 2.7, 4.55, 4.75, 6.8, 3.35, 4.25, 4.95, 3.7, 3.5, 5.2, 5.15, 
 5.8, 4.05, 4.5, 5.1, 5.2, 4.65, 4.2), MSFC.NHPT = c(15.75, 23.95, 22.475, 18.575, 
 20.45, 18.95, 22.25, 23.2, 17.5, 16.425, 20.5, 19.375, 16.55, 28.15, 19.675, 19.55, 
 21.15, 21.325, 17.45, 21.4, 17.05, 22.2, 20.175, 19.65, 25.1, 20.9, 31.8, 22.525, 
 19.4, 15.7, 18.7, 20.225, 19.575, 17.2, 19.25, 37.25, 16.15, 17, 19.2, 18.2, 20.075, 
 19.725, 17.725, 28.375, 22.15, 30.85, 21.5, 23, 18.925, 29.2, 20.525, 43.15, 23.175, 
 18.125, 17.85, 24.1, 19.125, 20.8, 17.8, 17.6, 21.825, 18.725, 19.325, 20.275, 34.8, 
 24.2, 26.775, 20.625, 20.925, 21.375, 19.05, 17.85, 20.875, 27.425, 30.775, 17.9, 
 20, 20.45, 22.925, 18.625, 18.775, 17.475, 18.75, 18.925, 17.05, 18.525, 22.875, 
 17.825, 21.225, 17.75, 19.7, 20.95, 15.8, 22.475, 17.875, 21.795, 19.625, 21.425, 
 18.95, 22.95, 19.25, 19.65, 17.275, 32.05, 18.075, 24.2, 19.65, 31.95, 18.05, 17.2, 
 16.225, 19.425, 21.4, 18.45, 28, 22.975, 20.2, 17.45, 21.55, 24.45, 20.975, 24.45, 
 18.575, 18.125, 15.15, 20.425, 17.5, 30.6, 15.725, 23.225, 24.8, 19.55, 18.05, 21.775, 
 17.875, 34.25, 18.05, 15.2, 20, 20.975, 18.025, 18.95, 17.875, 24.325, 20.125, 27.275, 
 19.275, 16.825, 21.35, 21.775, 19.95, 24.825, 16.8, 23.4, 20.175, 24.65, 18.9, 20.7, 
 18.825, 19.775, 17.05, 26.125, 33.6, 14.625, 19.925, 17.35, 19.25, 17.425, 17.45, 
 17.275, 17.575, 25.725, 18.475, 19.375, 17.7, 25.35, 19.375, 19.175, 20.15, 24.05, 
 19.85, 18.725, 21.1, 20.325, 20.2, 24.95, 30.475, 16.825, 21.35, 27.05, 18.925, 17.675, 
 29.05, 22.175, 25.775, 21.225, 19.775, 19.6, 20.325, 28.15, 15.25, 20.8, 21.475, 
 21.75, 21.15, 25.85, 16.475, 18.325, 21.925, 31.45, 28.425, 18.825, 17.825, 16.675, 
 24.025, 18.75, 19.575, 19.75, 14.35, 25.425, 34.05, 18.4, 18.975, 16.325, 17.05, 
 18.575, 40.9, 21.825, 18.975, 17.475, 18.3, 21.725, 16.1, 21.575, 19.1, 27.675, 18.5, 
 23.4, 33.675, 20.55, 16.8, 27.375, 19.175, 25.1, 19, 21.7, 27.225, 23.725, 17.45, 
 19.5, 20.175, 19.825, 30.1, 16.625, 29.525, 15.65, 21.275, 31.275, 21.975, 18.85, 
 19.275, 19.75, 22.85, 29.525, 22.2, 30.825, 16.45, 23.35, 17.025, 18.9, 21.225, 18.7, 
 15.275, 21.75, 17.925, 25.875, 24.15, 17.9, 21.675, 21.475, 18.725, 18.2, 18.85, 
 22.725, 18.175, 16.075, 18.825, 24.6, 18.775, 19.475, 22.025, 38.6, 18.125, 22.275, 
 23.925, 15.55, 19.125, 15.875, 20.25, 23.85, 17.15, 17.375, 19.525, 24.525, 18.3, 
 20.7, 22.175, 28.525, 18.8, 16.85, 24.275, 36.7, 21.85, 19.45, 21.975, 18.15, 15.25, 
 15.625, 21.175, 23.475, 16.625, 21.875, 20.175, 15.375, 22.975, 18.775, 17.45, 19.4, 
 22.05, 23.25, 19.2, 17.85, 20.05, 18.95, 16.725, 19.2, 22.175, 24.1, 17.475, 22.55, 
 15.675, 20.775, 18.075, 19.5, 19.6, 18.9, 20.6, 16.75, 18.85, 20.9, 16.6, 20.925, 
 20.675, 16.175, 16.225, 18.075, 17.225, 20.625, 19.175, 22.025, 21.825, 21.525, 20.675, 
 24.275, 23.7, 18.1, 17.7, 20.4, 14.2, 32.05, 22.15, 16.725, 17.1, 21.55, 21.8, 22.775, 
 26.475, 20.5, 41.375, 19.575, 19.675, 18.525, 18.25, 17.925, 19.975, 15.425, 15.925, 
 23.85, 18.15, 17.425, 17.775, 18.625, 48.25, 20.2, 20.875, 16.7, 26.25, 18.025, 25.45, 
 18.175, 21.2, 17.45, 18, 17.5, 21, 26.925, 25.975, 15.825, 27.725, 17.5, 34.4, 21.3, 
 24.5, 45.375, 18.975, 29.225, 18.575, 16.475, 16.65, 21.55, 21.45, 21.05, 23.825, 
 20.325, 19.875, 18.5, 23.325, 17.325, 15.175, 29.425, 27.7, 22.65, 21.2, 36.275, 
 22.775, 20.4, 20.875, 20.275, 17.8, 47.025, 27.425, 17.65, 21.725, 19.2, 19.7, 16.85, 
 16.45, 16.975, 22.25, 24.45, 19.075, 25.425, 29, 17.4, 18.55, 26.6, 16.275, 21.375, 
 22.4, 16.7, 19.4, 18.475, 20, 21.2, 17.625, 19.275, 16.875, 22.15, 24.15, 17.65, 
 19.075, 19.925, 20.925, 30.675, 15.75, 20.175, 27.125, 21.375, 19.7, 16.225, 20.2, 
 24.675, 18.875, 27.65, 17.375, 22.425, 16.8, 25, 17.175, 23.1, 19.625, 21.55, 18.5, 
 16.875, 17.9, 21.125, 19.6, 22.075, 21.825, 26.975, 18.175, 21.525, 16.85, 20.375, 
 22.15, 25.4, 21.425, 16.125, 23.075, 21.8, 19.275, 19, 18.25, 19.425, 18.275, 21.975, 
 19.75, 25.5, 33.9, 18.975, 30.475, 37.075, 31.45, 17.675, 17.7, 22.875, 23.375, 21.275, 
 18.975, 19.875, 23.975, 18.225, 32.35, 18.65, 20.35, 18.1, 21.875, 27.6, 28.075, 
 21.95, 20.875, 19.55, 28, 21.75, 20.825, 21.475, 19.275, 31.925, 21.075, 17.325, 
 15.825, 18.925, 20.1, 24.35, 24.9, 18.375, 20.15, 24.4, 22.95, 27.425, 24.25, 17.375, 
 21.325, 22.125, 19.475, 21.4, 23.025, 18.925, 22.55, 27.475, 19.275, 20.95, 26.625, 
 17.275, 22.25, 21.075, 19.025, 17.575, 24.975, 22.25, 28.35, 86.275, 25.05, 21.25, 
 18.35, 23.25, 21.725, 21.925, 19.25, 20.475, 19.725, 15.625, 18.65, 17.15, 25.4, 
 16.1, 18.2, 51.25, 18.8, 18.225, 20.45, 18.7, 19.525, 19.85, 20.3, 23.175, 22.425, 
 18.9, 19.625, 22.175, 20.275, 37.45, 18.25, 20.725, 17.675, 14.425, 18.7, 24.85, 
 18.775, 25.025, 16.75, 18.7, 21.225, 20.075, 20.15, 18.225, 21.425, 16.575, 17.725, 
 20.8, 25.275, 18.125, 18.625, 20.775, 21.45, 30.75, 24.5, 26.325, 25.225, 18.575, 
 17.775, 25.825, 24.05, 15.775, 18.7, 19.5, 16.975, 17, 19.8, 20.95, 22.725, 21.125, 
 21.25, 21.225, 24.3, 18.275, 19.525, 21.95, 19.725, 18.2, 21.025, 17.6, 19, 17.1, 
 39.675, 23.675, 30.825, 16.2, 16.525, 18.9, 17.175, 17.1, 23.675, 16.15, 24.125, 
 19.725, 17.675, 26.55, 16.225, 21.95, 20.775, 17.45, 17.025, 16.55, 26.475, 17.65, 
 19.15, 17.825, 23.35, 23.75, 44.1, 21.025, 18.2, 20.575, 21.1, 16.75, 20.45, 18.075, 
 19.1, 18.625, 28.775, 15.15, 21.35, 22.45, 22.35, 20.075, 17.8, 34.025, 19.25, 22.675, 
 18.5, 18.05, 17.75, 20.4, 42.25, 21.05, 17.275, 21.675, 21.825, 30, 19.05, 18.05, 
 19.125, 19.75, 18.5, 18.3, 25.2, 29.375, 19.15, 16.425, 25.475, 20.675, 19.05, 30.025, 
 18.5, 21.525, 23.25, 40.125, 43, 23.675, 18.075, 20.05, 20.5, 17.775, 23.525, 19.625, 
 19.175, 22.325, 15.675, 16.95, 16.925, 20.325, 18.075, 21.975, 24.125, 17.85, 19.175, 
 18.225, 29.7, 19.45, 21, 27, 16.4, 25.95, 19.65, 21.15, 22.775, 19.525, 18.9, 26.35, 
 25.45, 19.9, 21.275, 28.225, 26.8, 20.7, 17.475, 20.225, 26.425, 18.05, 21.95, 21.05, 
 26.625, 28.125, 19.4, 31.8, 20.7, 17.15, 21.2, 22.675, 17.025, 17.625, 22.575, 17.4, 
 18.45, 19.15, 20.325, 24.5, 20.9, 17.675, 16.275, 23.4, 19.125, 17.975, 16.025, 21.15, 
 16.975, 20.75, 21.725, 19.775, 28.375, 16.95, 18.55, 19.275, 17.925, 43.525, 22.875, 
 15.85, 18.1, 22.75, 21.45, 22.3, 22.025, 17.225, 24.2, 21.825, 19.775, 18.775, 54, 
 21.2, 31.475, 19.425, 21.175, 18.375, 25.6, 22.7, 16.075, 31.275, 20.85, 19.375, 
 20.95, 21.725, 21.975, 17.025, 16.45, 21.4, 19.65, 19.125, 19.025, 20.9, 21.1, 18.875, 
 24.525, 19.725, 37.275, 21.4, 15.6, 16.325, 19.15, 21, 20.725, 15.225, 20.5, 18.225, 
 37.05, 19.05, 15, 34.7, 21.1, 19.05, 19.95, 17.4, 19.375, 18.475, 23.1, 18.3, 19.275, 
 21.65, 27.55, 23.05, 22.5, 20.6, 19.825, 25.975, 19.525, 18.1, 20, 17.525, 18.025, 
 24.575, 32.675, 29.025, 29.425, 30.075, 55.5, 32.55, 19.45, 25.35, 17.75, 20.225, 
 19.4, 17.225, 21.55, 20.075, 17.95, 18.25, 17.225, 18.7, 22.125, 21.175, 16.225, 
 16.925, 19.475, 16.7, 18.65, 38.925, 22.15, 19.175, 17.275, 21.975, 19.55, 18.575, 
 21.25, 18, 18.125, 22.35, 19.475, 17.7, 23.55, 18.125, 17.575, 18.15, 27.25, 18.175, 
 15.4, 24.475, 44.95, 17.625, 16.275, 19.875, 19.85, 30.15, 20.5, 23.775, 18.05, 25.425, 
 20.875, 18.6, 18.05, 31.05, 20.9, 18.375, 18.175, 19.625, 17.4, 18.575, 19.7, 20.725, 
 18.575, 23.1, 19.25, 19.15, 18.2, 17.225, 21.55, 15.725, 18.35, 18.3, 20.425, 18.225, 
 19.625, 21.675, 18.725, 19.55, 16.65, 21.2, 16.625, 19.375, 16.625, 19.6, 18.05, 
 24.1, 19.075, 18.075, 22.3, 27.15, 13.95, 25.975, 18.75, 22.15, 27.2, 16.725, 22.2, 
 16.675, 29.825, 22.85, 21.15, 17.225, 19.8, 16.225, 27.425, 15.825, 14.925, 17.525, 
 15.65, 23.375, 18.575, 43.575, 31.225, 18.25, 17.875, 17.85, 17.8, 20.925, 17.8), 
     Treatments.DMTname = c("None", "Rebif", "Copaxone", "None", "None", "None", "Betaseron", 
     "None", "None", "None", "None", "Avonex", "None", "Rebif", "None", "Cellcept", 
     "Avonex", "Avonex", "None", "Rebif", "Avonex", "Tysabri", "None", "Rebif", "Rebif", 
     "Rituximab", "Betaseron + Copaxone", "None", "None", "Avonex", "Avonex", "None", 
     "None", "None", "Rebif", "Rebif + Gilenya", "Avonex", "None", "None", "Rebif", 
     "Rebif", "None", "None", "None", "Copaxone", "Rebif", "None", "Rebif", "None", 
     "None", "Rebif", "None", "Copaxone", "None", "None", "Copaxone", "None", "Rebif", 
     "None", "Copaxone", "None", "Avonex", "None", "Avonex", "Tysabri", "Copaxone", 
     "Rebif", "Copaxone", "Avonex", "Avonex + Rituximab", "Cellcept", "None", "Tysabri", 
     "None", "Rebif", "Rebif", "Betaseron", "Copaxone", "Betaseron", "None", "Copaxone", 
     "None", "None", "None", "None", "Avonex", "Rebif", "Rebif", "Rebif", "Betaseron", 
     "Rebif", "None", "Avonex", "None", "Avonex", "Avonex", "Tysabri", "Avonex", "Copaxone", 
     "Avonex", "Copaxone", "None", "Avonex", "None", "None", "None", "None", "Tysabri", 
     "None", "Betaseron", "None", "None", "Betaseron", "Avonex", "None", "Rebif", 
     "Avonex", "Tysabri", "Betaseron", "Copaxone", "Copaxone + Rebif", "Copaxone", 
     "Avonex", "None", "Cellcept", "Rebif", "None", "Rituximab", "Rebif", "Rebif + Imuran", 
     "None", "None", "None", "Rebif", "Avonex", "Copaxone", "Avonex", "Avonex", "Rebif", 
     "None", "Avonex", "None", "None", "None", "None", "None", "None", "None", "Avonex", 
     "None", "Copaxone", "Avonex", "Copaxone", "None", "None", "None", "Avonex", "None", 
     "Betaseron", "Betaseron", "None", "Betaseron", "Copaxone", "Avonex", "Copaxone", 
     "Tysabri", "Copaxone", "None", "Avonex", "None", "None", "Avonex", "None", "Avonex", 
     "None", "Rebif", "None", "None", "Avonex", "Betaseron", "Avonex", "Avonex", "Rebif", 
     "None", "Avonex", "Betaseron + Methotrexate", "Betaseron", "Avonex", "Copaxone", 
     "Rebif", "None", "None", "Rebif", "Copaxone", "None", "Copaxone", "Tysabri", 
     "Rebif", "Betaseron", "None", "Avonex", "Betaseron", "Rebif", "Betaseron", "None", 
     "Avonex", "Avonex", "Avonex", "Rebif", "Rebif", "Avonex + Methotrexate", "Copaxone", 
     "Rebif", "None", "None", "None", "None", "Rebif", "None", "Rebif + Imuran", "None", 
     "None", "None", "Avonex", "Betaseron", "None", "Aubagio + Gilenya", "Copaxone", 
     "None", "None", "None", "Copaxone", "Avonex", "Rebif", "Avonex", "Rebif", "Avonex", 
     "Avonex", "None", "None", "Avonex", "None", "None", "Copaxone", "Copaxone", "Copaxone", 
     "None", "Copaxone", "None", "Rebif", "Avonex", "None", "None", "None", "Rebif", 
     "None", "None", "Avonex", "Avonex", "None", "Avonex", "None", "None", "None", 
     "None", "Rebif", "None", "None", "Avonex", "Avonex", "Avonex", "Avonex", "Avonex", 
     "None", "Rebif", "Rebif", "Betaseron", "None", "Betaseron", "Avonex", "Copaxone", 
     "Copaxone", "Avonex", "None", "None", "Copaxone", "Tysabri", "Tysabri", "None", 
     "Rebif", "Rebif", "Rebif + Gilenya", "None", "None", "None", "None", "Avonex", 
     "None", "Rebif", "Rituximab", "None", "None", "None", "None", "Copaxone", "Rebif", 
     "Copaxone", "Avonex", "Betaseron", "None", "None", "Copaxone", "None", "None", 
     "Rebif", "Rebif", "Avonex", "None", "Avonex", "Betaseron", "Betaseron", "None", 
     "Avonex", "Avonex", "Rebif", "Betaseron", "Copaxone", "Copaxone", "Rebif", "Betaseron", 
     "None", "None", "None", "Tysabri", "None", "None", "Avonex", "Avonex", "Copaxone", 
     "Avonex", "None", "None", "None", "None", "Rebif", "None", "None", "Betaseron", 
     "Betaseron", "Rebif", "Copaxone", "Avonex", "Copaxone", "None", "Avonex", "None", 
     "Avonex", "None", "Copaxone", "None", "None", "Avonex", "None", "Copaxone", "Avonex", 
     "Betaseron", "None", "Rebif", "Avonex", "Rebif", "Rebif", "None", "Avonex", "Betaseron", 
     "None", "Copaxone", "Betaseron", "Copaxone", "None", "None", "None", "Rebif", 
     "None", "None", "None", "None", "None", "Betaseron", "None", "None", "Rebif", 
     "None", "Avonex", "None", "Rebif", "Cellcept", "Rebif", "Avonex", "Copaxone", 
     "Betaseron", "None", "None", "None", "None", "Betaseron", "Avonex", "Rebif", 
     "None", "None", "None", "Avonex", "Avonex", "None", "Rebif", "None", "Copaxone", 
     "Avonex", "None", "None", "Betaseron", "None", "Avonex", "Rebif", "Rebif", "Avonex", 
     "Rebif", "Copaxone", "Avonex", "Copaxone", "Rituximab", "Copaxone", "Rebif", 
     "None", "None", "None", "Copaxone", "None", "None", "Copaxone", "None", "Rebif", 
     "None", "Rebif", "None", "None", "Copaxone", "Copaxone", "None", "Avonex", "None", 
     "None", "None", "Rebif", "Betaseron", "None", "Avonex", "None", "None", "Copaxone", 
     "None", "None", "Betaseron", "Rebif", "Copaxone", "None", "None", "Avonex", "None", 
     "None", "Betaseron", "None", "None", "Betaseron", "Betaseron", "Cellcept", "Avonex", 
     "None", "None", "None", "None", "Tysabri", "Avonex", "Betaseron", "Rebif", "None", 
     "Tysabri", "None", "Avonex", "Betaseron", "None", "None", "None", "Rebif", "None", 
     "Avonex", "Avonex", "Avonex", "Copaxone", "Rebif", "Tysabri", "Avonex", "Avonex", 
     "None", "Cellcept", "None", "None", "Copaxone", "None", "Avonex", "None", "None", 
     "Rebif", "Avonex", "None", "Copaxone", "Avonex", "Rebif", "None", "Rebif", "Copaxone", 
     "Rebif", "Betaseron", "Avonex", "None", "Avonex", "None", "Avonex", "None", "Betaseron", 
     "None", "Rebif", "Copaxone", "Rebif", "None", "Avonex", "Rebif", "None", "Rebif", 
     "Betaseron", "Copaxone", "Betaseron", "Rebif", "Rebif", "Avonex", "None", "None", 
     "Copaxone", "Copaxone", "None", "None", "Gilenya", "Rituximab", "Copaxone", "Avonex", 
     "Rebif", "None", "None", "Copaxone", "Copaxone", "Rebif", "Avonex", "None", "None", 
     "Betaseron", "None", "None", "None", "Copaxone", "None", "Rebif", "None", "None", 
     "Avonex", "Rebif", "None", "None", "None", "Rebif", "None", "None", "Rituximab", 
     "Betaseron", "Avonex", "Betaseron", "Avonex", "Copaxone", "Rebif", "None", "None", 
     "None", "Betaseron", "None", "None", "Gilenya", "Copaxone", "None", "None", "Avonex", 
     "Avonex", "None", "Rebif", "Betaseron", "Rebif", "Copaxone", "Avonex", "Copaxone", 
     "None", "None", "None", "None", "None", "None", "Copaxone", "Rebif", "Betaseron", 
     "Avonex", "None", "Copaxone", "Rebif", "Copaxone", "None", "Avonex", "Avonex", 
     "None", "Rebif", "None", "Rebif", "None", "Avonex", "None", "None", "Avonex", 
     "Avonex", "Copaxone", "Rebif", "Rebif", "None", "None", "None", "None", "Betaseron", 
     "Rebif", "Rebif", "Rebif", "None", "Avonex", "Betaseron", "Avonex", "None", "Tysabri", 
     "None", "Avonex", "Rebif", "Avonex", "Copaxone", "Copaxone", "Avonex", "None", 
     "None", "None", "Copaxone", "None", "None", "None", "None", "Rebif", "Rebif", 
     "None", "Copaxone", "Rebif", "Avonex", "Avonex", "Copaxone", "Cellcept", "Rebif + Imuran", 
     "Copaxone", "Avonex", "Rebif", "Rebif + Copaxone", "Avonex", "Copaxone", "Avonex", 
     "Copaxone", "Copaxone", "Rebif + Imuran", "None", "Betaseron", "Avonex", "None", 
     "None", "None", "Avonex", "None", "Avonex", "Avonex + Rituximab", "None", "None", 
     "Betaseron", "None", "Copaxone", "Rebif", "Avonex", "Copaxone", "Copaxone", "None", 
     "Avonex", "None", "None", "None", "Rebif", "None", "None", "None", "None", "None", 
     "Rebif", "None", "Avonex", "Betaseron", "Rebif", "Avonex", "None", "Avonex", 
     "None", "Betaseron", "None", "Rebif", "Avonex", "Copaxone", "None", "None", "None", 
     "Avonex", "Rebif", "Copaxone", "Tysabri", "None", "None", "Gilenya", "Avonex", 
     "None", "None", "Betaseron", "Rebif", "None", "Copaxone", "None", "None", "None", 
     "None", "None", "Rebif", "Avonex", "Avonex", "Rebif", "Avonex", "None", "None", 
     "Rebif", "Avonex", "Avonex", "Betaseron", "Avonex", "Rebif", "None", "None", 
     "Avonex", "Betaseron", "None", "Avonex", "Rebif", "Betaseron", "Copaxone", "None", 
     "Copaxone", "Avonex", "Rebif", "Avonex", "Betaseron", "Betaseron", "Rebif", "None", 
     "None", "Copaxone", "Betaseron", "Betaseron", "Copaxone", "None", "Avonex", "Copaxone + Rebif", 
     "Betaseron", "None", "Betaseron", "Avonex", "Betaseron", "Copaxone", "None", 
     "Avonex", "Rebif", "None", "Imuran", "Betaseron", "None", "Rebif", "None", "None", 
     "None", "Rebif + Imuran", "Avonex", "Rebif", "None", "Betaseron", "None", "Avonex", 
     "Rebif", "Rebif + Gilenya", "Avonex", "None", "Rebif", "Rebif", "None", "Copaxone", 
     "Copaxone", "Avonex", "Rebif", "Avonex", "Rebif", "Copaxone", "Avonex", "Avonex", 
     "Avonex", "None", "Avonex", "None", "None", "Avonex", "None", "None", "None", 
     "None", "Avonex", "Avonex", "None", "None", "None", "None", "Copaxone", "None", 
     "Copaxone", "None", "Rituximab", "None", "None", "Copaxone", "None", "None", 
     "Avonex", "None", "Betaseron", "Rebif", "Rebif", "Avonex", "Tysabri", "Copaxone", 
     "Betaseron", "None", "Avonex", "Rebif", "Copaxone", "Avonex", "Avonex", "None", 
     "Betaseron", "None", "Copaxone", "None", "Rebif", "Tysabri", "None", "Rebif", 
     "Rebif", "Betaseron", "Rebif", "None", "Avonex", "None", "Avonex", "Rebif", "Betaseron", 
     "None", "None", "Rebif", "Rebif", "Tysabri", "Betaseron", "None", "Betaseron", 
     "Rebif", "None", "None", "None", "None", "None", "Betaseron", "None", "None", 
     "None", "None", "Avonex", "Rebif", "Copaxone", "Avonex", "None", "None", "Avonex", 
     "Avonex", "Copaxone", "None", "Avonex", "Avonex", "None", "None", "Copaxone", 
     "Betaseron + Rituximab", "None", "None", "Avonex", "Betaseron", "Rebif", "None", 
     "Avonex", "None", "Copaxone", "None", "Avonex", "Rebif", "Rebif", "None", "Avonex", 
     "Rebif", "Betaseron", "Rebif", "Rebif", "None", "None", "Copaxone", "None", "None", 
     "None", "Tysabri", "None", "Avonex", "Copaxone", "None", "None", "Copaxone", 
     "Copaxone", "None", "None", "Tysabri", "Rebif", "None", "None", "None", "Avonex", 
     "Copaxone", "Rebif", "None", "Rebif", "None", "None", "Rebif", "Rebif", "None", 
     "Copaxone", "Copaxone", "None", "Copaxone", "None", "None", "None", "Rebif", 
     "None", "None", "Rebif", "Rebif", "Avonex", "Copaxone", "Betaseron", "Avonex", 
     "Avonex", "None", "None", "None", "Avonex", "None", "Rebif", "Copaxone", "None", 
     "Rituximab", "None", "None", "Avonex", "None", "Avonex", "Copaxone", "Rebif", 
     "Rebif + Gilenya", "Copaxone", "None", "Avonex", "Avonex", "None", "Copaxone", 
     "None"), Treatments.nDMT = c(0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 
     1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 2, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 1, 1, 0, 
     0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 
     1, 2, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 
     1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 
     2, 1, 1, 0, 1, 1, 0, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 
     0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 
     0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 
     1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 
     1, 0, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
     1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 
     1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 
     0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
     1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 
     1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 
     1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
     0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 
     1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 
     0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 
     0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 
     0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 
     0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 
     0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
     1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 
     1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 
     1, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 0, 1, 1, 0, 0, 0, 1, 
     0, 1, 2, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 
     1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 
     0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 
     1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 0, 1, 1, 1, 1, 
     0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 1, 1, 0, 1, 
     1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 
     1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 
     1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
     0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 2, 0, 0, 
     1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 
     1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 
     0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 
     1, 1, 1, 2, 1, 0, 1, 1, 0, 1, 0), Treatments.hasIM = c(FALSE, TRUE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, 
     FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, TRUE, 
     TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, 
     FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, 
     TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, 
     TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, 
     FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, 
     TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, 
     TRUE, TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, 
     TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, 
     TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, 
     TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, 
     FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, TRUE, FALSE), Treatments.hasIS = c(FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE), 
     Treatments.hasMA = c(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
     FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
     FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE), 
     Treatments.DMTcategory = c(0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 
     1, 0, 1, 1, 2, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 1, 1, 0, 0, 
     0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 1, 1, 1, 1, 
     2, 1, 0, 2, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
     1, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 
     1, 1, 0, 1, 1, 0, 2, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 
     0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2, 1, 0, 1, 0, 0, 1, 0, 
     1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 
     0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 
     0, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
     0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 
     0, 1, 1, 1, 1, 1, 0, 0, 1, 2, 2, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 
     0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 
     1, 0, 0, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 
     0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 
     1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 
     0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 
     0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 
     0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1, 0, 
     2, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 
     1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 
     1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 2, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 
     1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 0, 
     0, 1, 0, 0, 2, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 
     1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 
     1, 1, 1, 0, 1, 1, 1, 0, 2, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 
     0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 
     1, 2, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 
     1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 1, 0, 0, 1, 1, 0, 
     1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 
     1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 
     1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 0, 1, 1, 0, 1, 1, 
     1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 
     0, 2, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
     0, 1, 2, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 2, 1, 0, 1, 1, 0, 0, 0, 
     0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 2, 0, 0, 1, 
     1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 
     0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
     0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 2, 0, 0, 1, 0, 1, 
     1, 1, 2, 1, 0, 1, 1, 0, 1, 0)), .Names = c("MSFC.T25FW", "MSFC.NHPT", "Treatments.DMTname", 
 "Treatments.nDMT", "Treatments.hasIM", "Treatments.hasIS", "Treatments.hasMA", "Treatments.DMTcategory"
 ), row.names = c(NA, -1015L), class = c("tbl_df", "tbl", "data.frame")), y = structure(c(1L, 
 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 
 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 
 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 
 2L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 
 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 
 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 
 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 
 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 2L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 
 2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 
 2L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 
 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 
 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 
 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 
 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 
 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 
 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 
 1L, 2L, 2L, 1L, 2L, 1L), .Label = c("FALSE", "TRUE"), class = "factor"), mtry = 2)
Error in randomForest.default(structure(list(MSFC.T25FW = c(3.85, 5.1,  : 
  NA/NaN/Inf in foreign function call (arg 1)
2022-08-25 23:58:43: Running predictor 'RP' for group 'MSTr'.
2022-08-25 23:58:43: CV num 1
2022-08-25 23:58:43: ERROR running train/test for predictor 'RP' and group 'MSTr': 
 factor Treatments.DMTname has new levels Betaseron + Methotrexate
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: tune.rpart(formula = Y ~ ., data = data.frame(Y = as.numeric(Ytrain), Xtrain), minsplit = (2:11) * 
     10, cp = c(1e-04, 3e-04, 0.001, 0.002, 0.005, 0.01, 0.02, 0.05), tunecontrol = tune.control(cross = 5, 
     error.fun = function(Yt, Yp) -AUROC(Yp, Yt))) at Code/05_predictors.R:120
4: tune("rpart.wrapper", train.x = formula, data = data, ranges = ranges, predict.func = predict.func, 
     na.action = na.action, ...)
5: predict.func(model, if (!is.null(validation.x)) validation.x else if (useFormula) data[-train.ind[[sample]], 
     , drop = FALSE] else if (inherits(train.x, "matrix.csr")) train.x[-train.ind[[sample]], 
     ] else train.x[-train.ind[[sample]], , drop = FALSE])
6: predict.rpart(model, if (!is.null(validation.x)) validation.x else if (useFormula) data[-train.ind[[sample]], 
     , drop = FALSE] else if (inherits(train.x, "matrix.csr")) train.x[-train.ind[[sample]], 
     ] else train.x[-train.ind[[sample]], , drop = FALSE])
7: model.frame(Terms, newdata, na.action = na.action, xlev = attr(object, "xlevels"))
8: model.frame.default(Terms, newdata, na.action = na.action, xlev = attr(object, "xlevels"))
9: stop(sprintf(ngettext(length(m), "factor %s has new level %s", "factor %s has new levels %s"), 
     nm, paste(nxl[m], collapse = ", ")), domain = NA)
Error in model.frame.default(Terms, newdata, na.action = na.action, xlev = attr(object,  : 
  factor Treatments.DMTname has new levels Betaseron + Methotrexate
2022-08-25 23:58:43: Running predictor 'SVM' for group 'MSTr'.
2022-08-25 23:58:43: CV num 1
Warning in data.matrix(Xtrain) : NAs introduced by coercion
2022-08-25 23:58:43: ERROR running train/test for predictor 'SVM' and group 'MSTr': 
 missing value where TRUE/FALSE needed
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: tune(svm, train.x = data.matrix(Xtrain), train.y = as.factor(Ytrain), ranges = list(gamma = 2^seq(-10, 
     0), cost = 10^(seq(-1, 1.5, 0.5)), probability = TRUE), predict.func = predict.fun, 
     tunecontrol = tune.control(cross = 5, error.fun = function(Yt, Yp) -AUROC(Yp, 
         Yt))) at Code/05_predictors.R:68
4: do.call(method, c(list(train.x[train.ind[[sample]], ], y = train.y[train.ind[[sample]]]), 
     pars, list(...)))
5: (function (x, ...) 
 UseMethod("svm"))(structure(c(4.6, 3.55, 6.55, 3.35, 4.15, 3.85, 4.05, 5.75, 5.05, 
 5, 4.25, 6.7, 3.65, 4.2, 3.5, 3.85, 4.6, 4.45, 3.5, 3.9, 3.65, 4.35, 4.55, 3.9, 4.4, 
 5.15, 4.3, 3.6, 3.65, 6.3, 3.95, 4.75, 3.5, 4.9, 4.65, 5.55, 4.35, 5.15, 4.05, 4.3, 
 4.45, 6.6, 4.9, 5.05, 3.85, 4, 6.7, 4.05, 4.35, 4.15, 4.85, 5.1, 4.15, 3.95, 3.9, 
 4.25, 4.05, 4.7, 3.9, 5, 4.3, 5.2, 6.5, 3.5, 3.1, 4, 4, 5.4, 5.25, 3.65, 5.8, 5.25, 
 3.8, 21.55, 3.65, 3.55, 6.15, 4, 4.9, 5.55, 6.3, 12.2, 5, 4.2, 4.95, 3.45, 4.45, 
 5, 4.15, 4.65, 5.4, 3.6, 8.95, 3.6, 4.95, 5.85, 6.35, 4.75, 3.1, 5.45, 3.45, 4.55, 
 4.25, 3.85, 5.55, 4.35, 4.5, 5, 3.75, 3.95, 6.1, 5.5, 5.75, 4.3, 6.5, 4.3, 3.45, 
 4, 5.85, 4.75, 4.05, 4.55, 5.3, 6.7, 3.75, 9.15, 6.25, 3.95, 4.9, 4.1, 4.2, 6, 9.1, 
 3.95, 6.15, 4.15, 5.15, 4.35, 5.5, 3.45, 4.55, 5.25, 4.15, 5.3, 5.65, 4.3, 5.3, 3, 
 3.95, 4.35, 3.85, 5.35, 3.85, 4.1, 5.2, 4.45, 4.25, 4.9, 4.85, 4.45, 4.35, 6.85, 
 7.35, 4.05, 4.05, 3.7, 5.3, 4.25, 4.7, 3.9, 3.65, 6.6, 3.5, 4.75, 5.9, 4.5, 4.05, 
 5.5, 5.8, 4.35, 4.25, 4.25, 4.6, 6.45, 4.25, 4.55, 6.7, 5.05, 5.15, 3.75, 4.9, 3.5, 
 3.35, 5, 34.35, 6.3, 3.55, 3.1, 4.5, 3.65, 4.3, 3.95, 5.9, 5, 3.85, 3.7, 5.45, 6, 
 4.7, 5.7, 4.95, 6.1, 3.7, 4.6, 5.35, 5.85, 4.8, 4.2, 4.05, 4.15, 4.85, 5.45, 5.15, 
 4.2, 4.4, 5.55, 4.75, 4.35, 6.15, 4.1, 4.15, 7.3, 4.15, 3.55, 3.45, 3.5, 5, 3.7, 
 6, 4.75, 4.55, 3.95, 5.25, 4.55, 7.45, 5.55, 4.75, 4, 6, 7.65, 5.05, 3.55, 4, 4.4, 
 6.05, 4.55, 5.1, 4.95, 6.4, 3.55, 3.9, 2.9, 5.7, 4, 4.55, 4.25, 4, 4.6, 2.55, 3.7, 
 5.3, 15.3, 4.25, 4.95, 3.9, 3.5, 8.1, 9.5, 4.05, 3.55, 3.9, 5.2, 3.1, 5.75, 7.9, 
 3.15, 3.8, 5, 4, 4.5, 3.95, 4.35, 8.05, 4.4, 5.2, 4.95, 3.4, 5.45, 4.3, 3.55, 4.65, 
 3.7, 4.2, 3.4, 5.35, 4.5, 4.95, 4.35, 4, 4.85, 3.65, 4.9, 6.15, 4.95, 5.1, 5.1, 3.7, 
 10.1, 3.7, 4.3, 3.8, 4.55, 3.95, 4.2, 5.3, 4.05, 5.9, 4.1, 4.9, 3.7, 4.15, 5.3, 4.45, 
 4.5, 4.8, 4.75, 3.95, 6.45, 3.7, 4.05, 8.65, 4.3, 4.25, 4.1, 4.3, 4.15, 5.3, 5.5, 
 4.5, 5.1, 5.7, 4.55, 14.4, 2.95, 22.6, 4.4, 5.2, 5, 3.85, 5.1, 3.75, 4.4, 4.05, 3.65, 
 3.7, 5.95, 4.65, 4.75, 4.75, 3.5, 4.05, 6.05, 4.35, 4.25, 7.1, 4.4, 4.3, 4, 4.15, 
 9.1, 3.45, 3.2, 6, 5.4, 6.05, 3.6, 4, 5.85, 5.75, 4.05, 3.85, 4.15, 4.8, 4.4, 4.2, 
 4.95, 3.9, 6.35, 3.8, 5.65, 4.5, 4.35, 4.7, 4.45, 4.8, 4.75, 4, 4.3, 4.7, 5.1, 4.5, 
 4.2, 6.1, 15.35, 3.85, 5.05, 4.65, 3.65, 5.45, 3.8, 2.5, 4.9, 3.85, 4.55, 3.15, 3.85, 
 4.65, 4.85, 4.75, 4.05, 3.45, 5.4, 5.3, 4.5, 5.4, 3.85, 4.35, 4.75, 4, 3.8, 4.2, 
 4.6, 4.45, 4.35, 2.95, 4.05, 3.6, 5.15, 5.9, 5.4, 4, 4.85, 3.6, 6.5, 4.2, 4.6, 3.45, 
 3.55, 4.25, 4.15, 5, 3.25, 4.4, 3.45, 4.7, 4.75, 3.4, 7, 4.5, 5.6, 3.2, 4.65, 3.2, 
 4.7, 5.2, 34.1, 5.55, 17.35, 3.05, 4.55, 4.15, 4.75, 4.1, 3.4, 6.35, 4.95, 12.2, 
 3.95, 6.25, 4.5, 6.65, 4.65, 3.2, 5.25, 4.5, 3.55, 8.05, 4.45, 5.05, 6.75, 6.4, 4.15, 
 4, 4.2, 12.9, 7.3, 3.9, 2.8, 3.55, 5.85, 4.65, 4.6, 3.85, 4.7, 4.7, 6.15, 5.25, 5.5, 
 5.65, 3.95, 5, 5.05, 3.9, 3.95, 3.3, 4.75, 5.65, 2.9, 4.15, 3, 3.85, 4.4, 4.75, 3.2, 
 3.9, 3.7, 4.2, 5.7, 5.55, 4.3, 4.25, 6.7, 4, 3.1, 5.75, 3.75, 4.15, 4.35, 4.75, 3.5, 
 3.8, 3.05, 3.85, 4.5, 6.4, 7.2, 7.5, 4.6, 3.6, 5.8, 4.05, 3.9, 3.9, 4.35, 5.15, 5.65, 
 3.65, 5.05, 4.35, 5.55, 3.3, 12.85, 4.7, 4.35, 4.8, 4.25, 5.5, 4.35, 3.8, 4.6, 6.2, 
 4, 4.45, 5.6, 5.7, 4.05, 10.1, 3.35, 3.7, 3.9, 13.45, 4.1, 3.6, 4.95, 5.95, 3.6, 
 4.6, 9.7, 5.3, 4.1, 5.85, 4.4, 6.45, 4.6, 4, 3.9, 6.1, 4.35, 9.3, 6.25, 4.2, 7.45, 
 4.7, 2.5, 4.9, 5.6, 4.95, 4.7, 3.6, 4.25, 4.8, 4.2, 3.5, 3.85, 4.75, 4.1, 4.1, 4.35, 
 3.6, 3.6, 5.45, 4.7, 7.05, 4.15, 3.9, 4.5, 5.15, 6.05, 4.85, 3.55, 4.25, 5.6, 5.45, 
 6.5, 3.7, 5.15, 7.1, 4.1, 4.9, 4.65, 3.65, 4.45, 4.75, 4.15, 5.8, 5.95, 3.25, 3.95, 
 5.65, 5.15, 4.65, 3.95, 5.95, 5.7, 5.2, 4, 4.45, 3.85, 4.1, 3.2, 4.05, 4.6, 5.2, 
 5.05, 4.8, 4.05, 4.3, 3.5, 4.65, 4, 3.55, 4, 5.95, 3.7, 4.15, 3.85, 4.35, 4.35, 3.6, 
 4.85, 4.8, 5.1, 5.15, 4.2, 5.95, 4.85, 4.1, 4.85, 6.3, 4.35, 6.7, 4.05, 5.65, 4.75, 
 11, 3.8, 4.85, 4.35, 4.45, 5, 5.75, 4.45, 5.4, 3.15, 3.4, 4.95, 4, 4.45, 3.65, 10.1, 
 3.95, 3.9, 7.4, 5.65, 4.5, 6.1, 5.6, 8.15, 6.2, 4.75, 4.9, 4.2, 6, 3.4, 4.05, 3.55, 
 3.7, 4.2, 6, 4.95, 3.8, 4.55, 4.3, 3.05, 6.35, 4.55, 6.7, 4.2, 5.1, 4.4, 3.8, 4.75, 
 4.25, 7.7, 4.35, 4.05, 4.75, 4.25, 5.25, 4, 4.5, 5.1, 3.85, 3.25, 4.9, 3.65, 4.25, 
 4.1, 3.9, 5.15, 3.55, 3.85, 4.85, 3.6, 4.75, 5.75, 6.55, 6.65, 4.6, 4.65, 4.65, 6.55, 
 6.85, 4.85, 6.05, 4.95, 5.35, 5.65, 3.7, 4.3, 4.6, 4.35, 3.2, 4.05, 4.75, 4.15, 4.8, 
 7.15, 4.5, 4.6, 5.5, 4.2, 5.95, 4.65, 3.45, 6.45, 6.45, 5.2, 4.7, 5.05, 7.4, 3.9, 
 4.75, 9.15, 5.2, 4.45, 5.6, 3.9, 5.05, 3.95, 3.5, 3.75, 7.3, 5.4, 4.25, 6.35, 4.85, 
 6.8, 5.05, 8, 4.25, 6.1, 4.95, 5.8, 3.95, 7, 7.75, 4.2, 4.35, 5.7, 4.75, 4.35, 4.05, 
 4.4, 4.1, 5.6, 4.65, 4.25, 6.8, 3.9, 4.25, 4.95, 6.4, 9.95, 4.15, 3.8, 4.95, 5.05, 
 4.35, 4.6, 3.95, 5.85, 5.3, 4.1, 2.7, 4.3, 3.8, 4.6, 3.15, 5.4, 5.5, 4.05, 4.55, 
 3.85, 3.9, 4.4, 2.9, 4.75, 3.45, 5, 4.05, 5.2, 4.35, 3.95, 4.7, 3.8, 4.6, 6.35, 7.4, 
 6.5, 3.55, 5.35, 5.4, 5.2, 5.05, 4.2, 3.85, 3.65, 16.4, 3.7, 7.4, 5.2, 3.5, 4.45, 
 4.2, 4.1, 2.95, 3.8, 6.6, 6.55, 4.65, 3.6, 5.1, 3.2, 3.95, 3.9, 4.7, 5.1, 4.3, 5.7, 
 7.5, 4.4, 4.45, 4.2, 5.2, 3.1, 3.95, 5.65, 3.6, 5.35, 4.5, 4.75, 6.15, 4.1, 4.75, 
 4.05, 4.65, 4.35, 3.8, 4.25, 5.1, 4.1, 4.95, 3.65, 7.85, 5.05, 3.7, 4.65, 4.25, 4.95, 
 4.85, 4.35, 5.9, 5.05, 6.75, 3.65, 4.5, 3.85, 4.85, 4.8, 4.6, 3.85, 7.45, 4.6, 6.75, 
 5.5, 5.35, 3.95, 4.55, 3.4, 4, 4.35, 3.4, 2.65, 3.95, 4.15, 4.9, 4.05, 3.95, 4.25, 
 4.75, 4.4, 4.65, 8.6, 4.65, 4.25, 5.9, 5.55, 3.9, 18.15, 4.85, 3.85, 5.2, 5.4, 5.1, 
 4.1, 4.6, 5.7, 14, 4.05, 4.15, 4.6, 3.6, 3.85, 6.25, 6.15, 3.9, 4.25, 2.9, 4.45, 
 5.3, 3.9, 4.55, 4.55, 5.8, 18.075, 19.75, 27.225, 18.025, 18.175, 17.8, 23.175, 21.4, 
 17, 19.375, 17.5, 32.05, 17.025, 22.875, 15.25, 17.025, 24.525, 18.475, 23.25, 15.725, 
 17.85, 21.175, 17.7, 15.475, 21.4, 15.825, 20.875, 16.725, 16.425, 25.6, 18.2, 16.825, 
 20.325, 19.4, 21, 25.4, 21.15, 22.675, 18.05, 18.25, 21.1, 28.775, 14.2, 31.275, 
 17.525, 27.25, 27.55, 20.95, 15.675, 20.45, 22.15, 20.725, 25.275, 19.075, 18.7, 
 15.7, 19.075, 22.15, 18.2, 18.7, 18.05, 20.875, 24.575, 15.8, 17.875, 16.6, 19.15, 
 17.725, 15.625, 17.15, 24.3, 22.125, 18.85, 25.5, 21.2, 20.525, 20, 15.175, 21, 19.425, 
 26.625, 24.85, 22.1, 16.425, 15.75, 16.775, 20.1, 34.7, 19.5, 47.025, 17.875, 19.525, 
 27.8, 21.125, 37.25, 22.05, 29.375, 18.025, 22.95, 23.775, 19.45, 20.775, 17, 17.225, 
 25.45, 21.1, 18.575, 21.225, 21.05, 21.4, 23.35, 22.825, 28.35, 21.45, 30.15, 20, 
 18.875, 16.45, 29.025, 19.75, 22.55, 16.55, 25.425, 24.9, 16.25, 25.825, 34.4, 20.5, 
 21.2, 16.8, 17.5, 20.475, 30.075, 17.675, 25.05, 16.25, 18.575, 17.1, 19.25, 18.15, 
 19.65, 31.45, 20.325, 43.525, 20.2, 22.025, 28.375, 15.725, 22.425, 21.725, 21.525, 
 21.8, 16.95, 21.825, 17.5, 25.45, 18.075, 20.2, 25.975, 24.65, 19.075, 23.025, 25.725, 
 23.05, 19.45, 18.525, 20.3, 17.875, 17.225, 17.225, 19.1, 24.15, 19.275, 17.775, 
 21.95, 21.795, 18.25, 20.15, 22.475, 17.85, 19.775, 20.625, 18.45, 26.975, 16.225, 
 19.2, 21.275, 25.85, 18.175, 19.05, 24.475, 16.925, 18.825, 19.125, 32.375, 26.475, 
 17.475, 17.275, 18.225, 16.875, 18.725, 21.4, 19.175, 29.525, 18.3, 15.6, 26.125, 
 26.35, 17.425, 17.375, 18.075, 25.425, 19, 16.225, 28.425, 19.8, 24.825, 16.625, 
 16.825, 15.925, 23.55, 20.725, 24.2, 17.75, 27.6, 22.7, 21.3, 23.55, 28.15, 19.325, 
 20.5, 19.55, 17.15, 19.85, 16.175, 31.925, 19.425, 17.15, 22.175, 17.225, 21.825, 
 21.95, 33.6, 18.15, 22.55, 21.55, 18.725, 21.325, 20.9, 18.025, 21.775, 16.1, 19.575, 
 20.15, 17.625, 16.225, 17.375, 15.375, 30.825, 21.375, 17.9, 17.05, 20.475, 16.45, 
 19.6, 18.625, 16.925, 19.65, 16.2, 18.5, 16.45, 19.125, 20.275, 17.525, 18.275, 20.2, 
 26.8, 27.65, 21.2, 20, 19.525, 22.525, 20.95, 23.675, 27.375, 21.2, 20.7, 20.7, 21.875, 
 23.675, 15.775, 17.5, 29.05, 16.55, 31.45, 20.175, 18.05, 35.275, 19.15, 17.475, 
 20.975, 19.65, 20.9, 19.55, 18.025, 20.725, 19.925, 15.825, 16.75, 18.1, 19.1, 24.5, 
 35.075, 18.575, 30, 16.55, 17.4, 29.075, 15.65, 21.8, 16.875, 20.075, 17.125, 17.275, 
 28.275, 19.625, 22.925, 19.275, 29.225, 19.625, 15.15, 20.575, 18.8, 19.375, 18.6, 
 20.4, 21.175, 23.225, 16.625, 28.125, 25.425, 16.85, 15.275, 20.6, 15.2, 19.725, 
 21.825, 17.4, 17.875, 25.875, 22.175, 17.35, 18.225, 21.475, 27.925, 24.6, 18.575, 
 21.025, 20.4, 24.525, 16.8, 20.2, 19.875, 17.925, 18.25, 21.325, 28.075, 18.2, 18.925, 
 14.45, 19.725, 21.975, 23.4, 19.325, 36.7, 17.275, 24.1, 20.325, 16.675, 28.375, 
 16.875, 18.425, 22.15, 21.1, 21.45, 25, 17.4, 29.525, 28.225, 22.175, 20.325, 20.95, 
 22.475, 22.625, 19.275, 21.225, 21.125, 21.775, 20.45, 24.1, 16.4, 18.9, 17.925, 
 22.25, 21.2, 24.675, 20.5, 30.85, 17.2, 17.45, 25.4, 17.675, 30.825, 29.2, 18.975, 
 23.075, 19.175, 17.1, 20.875, 22.125, 17.225, 17, 21.425, 19.55, 17.45, 17.45, 22.3, 
 16.725, 23.55, 19.6, 19.425, 23.1, 17.225, 19.7, 18.725, 18.25, 18.575, 19.275, 18.05, 
 24.125, 17.625, 22.15, 29.425, 17.7, 18.5, 20.55, 15.7, 21.675, 20.15, 20.375, 16.95, 
 20.925, 19.475, 21.2, 20.275, 17.7, 16.2, 18.125, 19.625, 37.275, 55.5, 17.4, 14.875, 
 17.575, 26.675, 20.975, 19.025, 20.75, 36.65, 19.875, 18.375, 21.7, 16.075, 19.3, 
 18.65, 35.2, 19.15, 19.425, 19.65, 19.05, 20.075, 19.725, 16.225, 16.475, 48.25, 
 17.4, 20.225, 16.425, 32.05, 20.425, 19.15, 19, 18.875, 22.125, 42.25, 21.825, 22.35, 
 23.175, 26.55, 37.825, 21.375, 19.65, 17.725, 20.25, 36.275, 32.55, 18.575, 14.625, 
 18.975, 34.55, 18.375, 21.375, 22.025, 29.7, 23.25, 33.675, 29, 18.9, 25.1, 18.1, 
 22.075, 19.575, 17.1, 18.525, 19.95, 26.425, 18.775, 19.25, 17.65, 16.525, 23.7, 
 17.2, 16.225, 16.325, 15.4, 18.6, 19.175, 22.15, 16.825, 21.8, 17.95, 18.05, 15.4, 
 19.375, 20.675, 19.375, 18.7, 21.725, 23.375, 21.425, 19.275, 21.825, 22.975, 21.75, 
 32.35, 40.125, 17.675, 16.1, 17.575, 19.925, 27.7, 24.325, 20, 17.35, 43.575, 18.775, 
 23.1, 19.4, 21.275, 44.95, 18.325, 18.825, 17.925, 17.05, 20.6, 29.825, 30.85, 16.55, 
 17.275, 20.25, 21.675, 17.575, 20.95, 28.15, 27.05, 19.625, 31.8, 19.25, 16.55, 18, 
 29.4, 18.175, 18.1, 17.775, 24.275, 22.025, 27.475, 28, 16.7, 21.025, 21.975, 26.25, 
 24.525, 19.525, 15.225, 18.6, 26.625, 22.5, 29.425, 43, 16.975, 25.925, 21.175, 17.575, 
 20.525, 17.15, 19.15, 19.525, 20.625, 20.8, 17.4, 22.25, 17.675, 18.05, 19.675, 15.775, 
 15.25, 19.525, 24.95, 19.6, 22.025, 18.25, 25.2, 19.55, 17.475, 16.225, 21.05, 27.275, 
 30.475, 22.875, 15.675, 20.175, 19.875, 35.275, 20.5, 18.875, 45.675, 19.4, 21.225, 
 18, 21.65, 24.125, 38.6, 18.125, 25.025, 23, 20.775, 18.175, 16.15, 17.325, 21.475, 
 17.9, 24.4, 19.15, 19.6, 21.15, 22.975, 20.225, 19.025, 16.85, 23.25, 18.175, 18.625, 
 23.35, 18.2, 20.275, 18.85, 21.725, 16.825, 19.525, 18.925, 22.15, 19.15, 21.15, 
 16.7, 23.325, 18.15, 21.15, 16.975, 20.025, 20.275, 19.4, 18.9, 19.65, 19.85, 21, 
 16.025, 27.725, 34.05, 21.475, 32.675, 16.75, 43.15, 25.475, 21.35, 22.225, 20.575, 
 21.975, 19.35, 30.6, 25.775, 16.65, 21.675, 22.475, 16.9, 20.95, 21.4, 25.975, 17.425, 
 23.675, 21.55, 15.65, 54, 16.475, 18.225, 25.85, 24.45, 19.025, 21.55, 22.025, 17.8, 
 24.6, 25.95, 19.2, 17.65, 18.625, 17.825, 22.4, 30.675, 18.7, 21.95, 19.8, 19.975, 
 20.45, 24.4, 22.15, 24.125, 16.275, 17.625, 23.975, 19.4, 16.725, 20.05, 33.825, 
 19.55, 16.15, 15.85, 19.4, 22.175, 20.325, 16.625, 18.125, 16.675, 17.375, 21.925, 
 17.925, 17.25, 18.425, 19.725, 19.05, 18.4, 18.475, 26.6, 18.075, 22.775, 45.375, 
 31.325, 34.125, 18.275, 15.8, 17.45, 18.05, 19.775, 22.2, 18.125, 21.95, 21.75, 23.6, 
 16.125, 22.675, 22.725, 16.85, 22.225, 17.25, 16.925, 18.65, 21.375, 19.85, 18.75, 
 18.9, 23.925, 17.625, 40.275, 19.275, 19.825, 25.225, 19.625, 19.75, 18.2, 19.65, 
 30.75, 18.95, 17.45, 24.5, 17.175, 19.05, 14.85, 18.05, 20.075, 17.325, 15.875, 19.175, 
 22.675, 21.55, 16.275, 17.45, 23.4, 17.175, 17.2, 20.075, 26.425, 37.05, 16.275, 
 24.5, 16.35, 25.45, 17.275, 13.95, 17.125, 31.8, 19.075, 18.8, 18.05, 17.825, 20.35, 
 22.675, 21.925, 14.925, 24.2, 19.9, 19.475, 24.05, 19.7, 25.975, 18.55, 18.3, 21.625, 
 22.35, 19, 19.45, 20.15, 18.1, 18.975, 19.4, 17.225, 21.1, 19.825, 16.65, 25.25, 
 21.975, 18.6, 18.775, 20, 29.05, 21.425, 18.7, 15.55, 20.4, 17.825, 16.975, 21.45, 
 19.675, 18.8, 19.025, 19.175, 18.125, 16.7, 21.075, 24.2, 17.75, 18, 31.05, 24.1, 
 19.2, 21.55, 23, 15.75, 18.425, 18.175, 17.925, 21.15, 18.5, 18.75, 16.075, 19.7, 
 20.325, 19.025, 17.6, 24.6, 26.475, 25.575, 23.45, 33.9, 18.5, 18.7, 22.775, 21.525, 
 21.975, 21.35, 31.475, 31.95, 21.725, 20.925, 17.025, 18.225, 21.725, 17.6, 29.75, 
 25.1, 19.25, 19.5, 18.625, 30.475, 18.225, 22.725, 17.9, 20.675, 18.925, 20.9, 19.625, 
 21.975, 21.35, 22.3, 19.375, 19.6, 21.975, 18.5, 18.025, 21.925, 22.2, 22.85, 16.8, 
 16.975, 20.875, 40.9, 21.25, 24.775, 21.25, 19.75, 15.15, 18.075, 17.7, 18.075, 16.75, 
 27.125, 17.925, 16.625, 18.4, 22.775, 18.45, 17.275, 17.025, 20.175, 20.875, 20.45, 
 20.375, 23.725, 15.9, 15, 23.825, 21.9, 18.375, 20.925, 27.425, 19.875, 18.425, 19.775, 
 20.7, 18.1, 44.1, 28.525, 19.975, 17.8, 20.75, 20.775, 34.025, 24.025, 24.45, 41.375, 
 24.975, 20.175, 25.35, 22.65, 19.125, 22.15, 34.125, 21.75, 17.05, 15.625, 16.85, 
 21.2, 17.7, 21.4, 19.1, 31.225, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, 0, 0, 0, 0, 1, 1, 
 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 
 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 
 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 
 1, 0, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 
 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 
 1, 2, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 
 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 
 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 2, 0, 1, 0, 0, 0, 1, 0, 1, 
 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 
 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 
 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 
 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
 1, 1, 0, 0, 0, 1, 2, 1, 0, 2, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 
 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 2, 0, 
 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 
 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 
 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 2, 
 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 
 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 
 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 
 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 2, 0, 0, 1, 0, 1, 1, 1, 1, 0, 
 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 2, 1, 0, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 
 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 
 2, 1, 1, 0, 1, 1, 1, 2, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 2, 0, 1, 
 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 
 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 
 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 
 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 2, 
 0, 1, 1, 1, 1, 0, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 
 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 
 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 
 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 
 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
 0, 0, 2, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 
 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 
 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 
 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 
 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 
 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 
 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 
 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 
 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 
 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 
 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 
 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 
 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 
 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 
 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 
 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 
 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 
 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 
 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 
 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 
 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 
 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 
 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 
 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 
 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 
 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 
 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 
 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 
 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 
 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 
 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 
 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 
 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 
 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 
 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 
 2, 1, 1, 1, 1, 0, 0, 2, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1, 0, 1, 2, 0, 0, 1, 0, 1, 0, 0, 1, 
 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 2, 1, 0, 
 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 
 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 
 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 
 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 
 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 
 0, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 
 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 
 0, 1, 1, 0, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 
 1, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 
 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 
 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 
 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 2, 
 2, 0, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 2, 1, 
 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 1, 0, 1, 2, 0, 1, 
 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 
 0, 1, 0, 1, 1, 2, 1, 2, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 
 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 
 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
 1, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 
 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 1, 1, 0, 
 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 
 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 0, 
 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 
 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 
 0, 1, 0, 2, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 2, 0, 0, 0, 1, 
 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 2, 1, 2, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 0, 0, 1, 0, 
 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1), .Dim = c(1015L, 8L), .Dimnames = list(
     NULL, c("MSFC.T25FW", "MSFC.NHPT", "Treatments.DMTname", "Treatments.nDMT", "Treatments.hasIM", 
     "Treatments.hasIS", "Treatments.hasMA", "Treatments.DMTcategory"))), y = structure(c(1L, 
 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 
 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 
 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 
 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 
 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 
 2L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 
 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 
 2L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 
 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 
 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 
 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 
 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 
 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 
 1L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 1L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 
 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 
 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 
 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 
 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 
 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L), .Label = c("FALSE", "TRUE"), class = "factor"), gamma = 0.0009765625, 
     cost = 0.1, probability = TRUE)
6: svm.default(structure(c(4.6, 3.55, 6.55, 3.35, 4.15, 3.85, 4.05, 5.75, 5.05, 5, 4.25, 
 6.7, 3.65, 4.2, 3.5, 3.85, 4.6, 4.45, 3.5, 3.9, 3.65, 4.35, 4.55, 3.9, 4.4, 5.15, 
 4.3, 3.6, 3.65, 6.3, 3.95, 4.75, 3.5, 4.9, 4.65, 5.55, 4.35, 5.15, 4.05, 4.3, 4.45, 
 6.6, 4.9, 5.05, 3.85, 4, 6.7, 4.05, 4.35, 4.15, 4.85, 5.1, 4.15, 3.95, 3.9, 4.25, 
 4.05, 4.7, 3.9, 5, 4.3, 5.2, 6.5, 3.5, 3.1, 4, 4, 5.4, 5.25, 3.65, 5.8, 5.25, 3.8, 
 21.55, 3.65, 3.55, 6.15, 4, 4.9, 5.55, 6.3, 12.2, 5, 4.2, 4.95, 3.45, 4.45, 5, 4.15, 
 4.65, 5.4, 3.6, 8.95, 3.6, 4.95, 5.85, 6.35, 4.75, 3.1, 5.45, 3.45, 4.55, 4.25, 3.85, 
 5.55, 4.35, 4.5, 5, 3.75, 3.95, 6.1, 5.5, 5.75, 4.3, 6.5, 4.3, 3.45, 4, 5.85, 4.75, 
 4.05, 4.55, 5.3, 6.7, 3.75, 9.15, 6.25, 3.95, 4.9, 4.1, 4.2, 6, 9.1, 3.95, 6.15, 
 4.15, 5.15, 4.35, 5.5, 3.45, 4.55, 5.25, 4.15, 5.3, 5.65, 4.3, 5.3, 3, 3.95, 4.35, 
 3.85, 5.35, 3.85, 4.1, 5.2, 4.45, 4.25, 4.9, 4.85, 4.45, 4.35, 6.85, 7.35, 4.05, 
 4.05, 3.7, 5.3, 4.25, 4.7, 3.9, 3.65, 6.6, 3.5, 4.75, 5.9, 4.5, 4.05, 5.5, 5.8, 4.35, 
 4.25, 4.25, 4.6, 6.45, 4.25, 4.55, 6.7, 5.05, 5.15, 3.75, 4.9, 3.5, 3.35, 5, 34.35, 
 6.3, 3.55, 3.1, 4.5, 3.65, 4.3, 3.95, 5.9, 5, 3.85, 3.7, 5.45, 6, 4.7, 5.7, 4.95, 
 6.1, 3.7, 4.6, 5.35, 5.85, 4.8, 4.2, 4.05, 4.15, 4.85, 5.45, 5.15, 4.2, 4.4, 5.55, 
 4.75, 4.35, 6.15, 4.1, 4.15, 7.3, 4.15, 3.55, 3.45, 3.5, 5, 3.7, 6, 4.75, 4.55, 3.95, 
 5.25, 4.55, 7.45, 5.55, 4.75, 4, 6, 7.65, 5.05, 3.55, 4, 4.4, 6.05, 4.55, 5.1, 4.95, 
 6.4, 3.55, 3.9, 2.9, 5.7, 4, 4.55, 4.25, 4, 4.6, 2.55, 3.7, 5.3, 15.3, 4.25, 4.95, 
 3.9, 3.5, 8.1, 9.5, 4.05, 3.55, 3.9, 5.2, 3.1, 5.75, 7.9, 3.15, 3.8, 5, 4, 4.5, 3.95, 
 4.35, 8.05, 4.4, 5.2, 4.95, 3.4, 5.45, 4.3, 3.55, 4.65, 3.7, 4.2, 3.4, 5.35, 4.5, 
 4.95, 4.35, 4, 4.85, 3.65, 4.9, 6.15, 4.95, 5.1, 5.1, 3.7, 10.1, 3.7, 4.3, 3.8, 4.55, 
 3.95, 4.2, 5.3, 4.05, 5.9, 4.1, 4.9, 3.7, 4.15, 5.3, 4.45, 4.5, 4.8, 4.75, 3.95, 
 6.45, 3.7, 4.05, 8.65, 4.3, 4.25, 4.1, 4.3, 4.15, 5.3, 5.5, 4.5, 5.1, 5.7, 4.55, 
 14.4, 2.95, 22.6, 4.4, 5.2, 5, 3.85, 5.1, 3.75, 4.4, 4.05, 3.65, 3.7, 5.95, 4.65, 
 4.75, 4.75, 3.5, 4.05, 6.05, 4.35, 4.25, 7.1, 4.4, 4.3, 4, 4.15, 9.1, 3.45, 3.2, 
 6, 5.4, 6.05, 3.6, 4, 5.85, 5.75, 4.05, 3.85, 4.15, 4.8, 4.4, 4.2, 4.95, 3.9, 6.35, 
 3.8, 5.65, 4.5, 4.35, 4.7, 4.45, 4.8, 4.75, 4, 4.3, 4.7, 5.1, 4.5, 4.2, 6.1, 15.35, 
 3.85, 5.05, 4.65, 3.65, 5.45, 3.8, 2.5, 4.9, 3.85, 4.55, 3.15, 3.85, 4.65, 4.85, 
 4.75, 4.05, 3.45, 5.4, 5.3, 4.5, 5.4, 3.85, 4.35, 4.75, 4, 3.8, 4.2, 4.6, 4.45, 4.35, 
 2.95, 4.05, 3.6, 5.15, 5.9, 5.4, 4, 4.85, 3.6, 6.5, 4.2, 4.6, 3.45, 3.55, 4.25, 4.15, 
 5, 3.25, 4.4, 3.45, 4.7, 4.75, 3.4, 7, 4.5, 5.6, 3.2, 4.65, 3.2, 4.7, 5.2, 34.1, 
 5.55, 17.35, 3.05, 4.55, 4.15, 4.75, 4.1, 3.4, 6.35, 4.95, 12.2, 3.95, 6.25, 4.5, 
 6.65, 4.65, 3.2, 5.25, 4.5, 3.55, 8.05, 4.45, 5.05, 6.75, 6.4, 4.15, 4, 4.2, 12.9, 
 7.3, 3.9, 2.8, 3.55, 5.85, 4.65, 4.6, 3.85, 4.7, 4.7, 6.15, 5.25, 5.5, 5.65, 3.95, 
 5, 5.05, 3.9, 3.95, 3.3, 4.75, 5.65, 2.9, 4.15, 3, 3.85, 4.4, 4.75, 3.2, 3.9, 3.7, 
 4.2, 5.7, 5.55, 4.3, 4.25, 6.7, 4, 3.1, 5.75, 3.75, 4.15, 4.35, 4.75, 3.5, 3.8, 3.05, 
 3.85, 4.5, 6.4, 7.2, 7.5, 4.6, 3.6, 5.8, 4.05, 3.9, 3.9, 4.35, 5.15, 5.65, 3.65, 
 5.05, 4.35, 5.55, 3.3, 12.85, 4.7, 4.35, 4.8, 4.25, 5.5, 4.35, 3.8, 4.6, 6.2, 4, 
 4.45, 5.6, 5.7, 4.05, 10.1, 3.35, 3.7, 3.9, 13.45, 4.1, 3.6, 4.95, 5.95, 3.6, 4.6, 
 9.7, 5.3, 4.1, 5.85, 4.4, 6.45, 4.6, 4, 3.9, 6.1, 4.35, 9.3, 6.25, 4.2, 7.45, 4.7, 
 2.5, 4.9, 5.6, 4.95, 4.7, 3.6, 4.25, 4.8, 4.2, 3.5, 3.85, 4.75, 4.1, 4.1, 4.35, 3.6, 
 3.6, 5.45, 4.7, 7.05, 4.15, 3.9, 4.5, 5.15, 6.05, 4.85, 3.55, 4.25, 5.6, 5.45, 6.5, 
 3.7, 5.15, 7.1, 4.1, 4.9, 4.65, 3.65, 4.45, 4.75, 4.15, 5.8, 5.95, 3.25, 3.95, 5.65, 
 5.15, 4.65, 3.95, 5.95, 5.7, 5.2, 4, 4.45, 3.85, 4.1, 3.2, 4.05, 4.6, 5.2, 5.05, 
 4.8, 4.05, 4.3, 3.5, 4.65, 4, 3.55, 4, 5.95, 3.7, 4.15, 3.85, 4.35, 4.35, 3.6, 4.85, 
 4.8, 5.1, 5.15, 4.2, 5.95, 4.85, 4.1, 4.85, 6.3, 4.35, 6.7, 4.05, 5.65, 4.75, 11, 
 3.8, 4.85, 4.35, 4.45, 5, 5.75, 4.45, 5.4, 3.15, 3.4, 4.95, 4, 4.45, 3.65, 10.1, 
 3.95, 3.9, 7.4, 5.65, 4.5, 6.1, 5.6, 8.15, 6.2, 4.75, 4.9, 4.2, 6, 3.4, 4.05, 3.55, 
 3.7, 4.2, 6, 4.95, 3.8, 4.55, 4.3, 3.05, 6.35, 4.55, 6.7, 4.2, 5.1, 4.4, 3.8, 4.75, 
 4.25, 7.7, 4.35, 4.05, 4.75, 4.25, 5.25, 4, 4.5, 5.1, 3.85, 3.25, 4.9, 3.65, 4.25, 
 4.1, 3.9, 5.15, 3.55, 3.85, 4.85, 3.6, 4.75, 5.75, 6.55, 6.65, 4.6, 4.65, 4.65, 6.55, 
 6.85, 4.85, 6.05, 4.95, 5.35, 5.65, 3.7, 4.3, 4.6, 4.35, 3.2, 4.05, 4.75, 4.15, 4.8, 
 7.15, 4.5, 4.6, 5.5, 4.2, 5.95, 4.65, 3.45, 6.45, 6.45, 5.2, 4.7, 5.05, 7.4, 3.9, 
 4.75, 9.15, 5.2, 4.45, 5.6, 3.9, 5.05, 3.95, 3.5, 3.75, 7.3, 5.4, 4.25, 6.35, 4.85, 
 6.8, 5.05, 8, 4.25, 6.1, 4.95, 5.8, 3.95, 7, 7.75, 4.2, 4.35, 5.7, 4.75, 4.35, 4.05, 
 4.4, 4.1, 5.6, 4.65, 4.25, 6.8, 3.9, 4.25, 4.95, 6.4, 9.95, 4.15, 3.8, 4.95, 5.05, 
 4.35, 4.6, 3.95, 5.85, 5.3, 4.1, 2.7, 4.3, 3.8, 4.6, 3.15, 5.4, 5.5, 4.05, 4.55, 
 3.85, 3.9, 4.4, 2.9, 4.75, 3.45, 5, 4.05, 5.2, 4.35, 3.95, 4.7, 3.8, 4.6, 6.35, 7.4, 
 6.5, 3.55, 5.35, 5.4, 5.2, 5.05, 4.2, 3.85, 3.65, 16.4, 3.7, 7.4, 5.2, 3.5, 4.45, 
 4.2, 4.1, 2.95, 3.8, 6.6, 6.55, 4.65, 3.6, 5.1, 3.2, 3.95, 3.9, 4.7, 5.1, 4.3, 5.7, 
 7.5, 4.4, 4.45, 4.2, 5.2, 3.1, 3.95, 5.65, 3.6, 5.35, 4.5, 4.75, 6.15, 4.1, 4.75, 
 4.05, 4.65, 4.35, 3.8, 4.25, 5.1, 4.1, 4.95, 3.65, 7.85, 5.05, 3.7, 4.65, 4.25, 4.95, 
 4.85, 4.35, 5.9, 5.05, 6.75, 3.65, 4.5, 3.85, 4.85, 4.8, 4.6, 3.85, 7.45, 4.6, 6.75, 
 5.5, 5.35, 3.95, 4.55, 3.4, 4, 4.35, 3.4, 2.65, 3.95, 4.15, 4.9, 4.05, 3.95, 4.25, 
 4.75, 4.4, 4.65, 8.6, 4.65, 4.25, 5.9, 5.55, 3.9, 18.15, 4.85, 3.85, 5.2, 5.4, 5.1, 
 4.1, 4.6, 5.7, 14, 4.05, 4.15, 4.6, 3.6, 3.85, 6.25, 6.15, 3.9, 4.25, 2.9, 4.45, 
 5.3, 3.9, 4.55, 4.55, 5.8, 18.075, 19.75, 27.225, 18.025, 18.175, 17.8, 23.175, 21.4, 
 17, 19.375, 17.5, 32.05, 17.025, 22.875, 15.25, 17.025, 24.525, 18.475, 23.25, 15.725, 
 17.85, 21.175, 17.7, 15.475, 21.4, 15.825, 20.875, 16.725, 16.425, 25.6, 18.2, 16.825, 
 20.325, 19.4, 21, 25.4, 21.15, 22.675, 18.05, 18.25, 21.1, 28.775, 14.2, 31.275, 
 17.525, 27.25, 27.55, 20.95, 15.675, 20.45, 22.15, 20.725, 25.275, 19.075, 18.7, 
 15.7, 19.075, 22.15, 18.2, 18.7, 18.05, 20.875, 24.575, 15.8, 17.875, 16.6, 19.15, 
 17.725, 15.625, 17.15, 24.3, 22.125, 18.85, 25.5, 21.2, 20.525, 20, 15.175, 21, 19.425, 
 26.625, 24.85, 22.1, 16.425, 15.75, 16.775, 20.1, 34.7, 19.5, 47.025, 17.875, 19.525, 
 27.8, 21.125, 37.25, 22.05, 29.375, 18.025, 22.95, 23.775, 19.45, 20.775, 17, 17.225, 
 25.45, 21.1, 18.575, 21.225, 21.05, 21.4, 23.35, 22.825, 28.35, 21.45, 30.15, 20, 
 18.875, 16.45, 29.025, 19.75, 22.55, 16.55, 25.425, 24.9, 16.25, 25.825, 34.4, 20.5, 
 21.2, 16.8, 17.5, 20.475, 30.075, 17.675, 25.05, 16.25, 18.575, 17.1, 19.25, 18.15, 
 19.65, 31.45, 20.325, 43.525, 20.2, 22.025, 28.375, 15.725, 22.425, 21.725, 21.525, 
 21.8, 16.95, 21.825, 17.5, 25.45, 18.075, 20.2, 25.975, 24.65, 19.075, 23.025, 25.725, 
 23.05, 19.45, 18.525, 20.3, 17.875, 17.225, 17.225, 19.1, 24.15, 19.275, 17.775, 
 21.95, 21.795, 18.25, 20.15, 22.475, 17.85, 19.775, 20.625, 18.45, 26.975, 16.225, 
 19.2, 21.275, 25.85, 18.175, 19.05, 24.475, 16.925, 18.825, 19.125, 32.375, 26.475, 
 17.475, 17.275, 18.225, 16.875, 18.725, 21.4, 19.175, 29.525, 18.3, 15.6, 26.125, 
 26.35, 17.425, 17.375, 18.075, 25.425, 19, 16.225, 28.425, 19.8, 24.825, 16.625, 
 16.825, 15.925, 23.55, 20.725, 24.2, 17.75, 27.6, 22.7, 21.3, 23.55, 28.15, 19.325, 
 20.5, 19.55, 17.15, 19.85, 16.175, 31.925, 19.425, 17.15, 22.175, 17.225, 21.825, 
 21.95, 33.6, 18.15, 22.55, 21.55, 18.725, 21.325, 20.9, 18.025, 21.775, 16.1, 19.575, 
 20.15, 17.625, 16.225, 17.375, 15.375, 30.825, 21.375, 17.9, 17.05, 20.475, 16.45, 
 19.6, 18.625, 16.925, 19.65, 16.2, 18.5, 16.45, 19.125, 20.275, 17.525, 18.275, 20.2, 
 26.8, 27.65, 21.2, 20, 19.525, 22.525, 20.95, 23.675, 27.375, 21.2, 20.7, 20.7, 21.875, 
 23.675, 15.775, 17.5, 29.05, 16.55, 31.45, 20.175, 18.05, 35.275, 19.15, 17.475, 
 20.975, 19.65, 20.9, 19.55, 18.025, 20.725, 19.925, 15.825, 16.75, 18.1, 19.1, 24.5, 
 35.075, 18.575, 30, 16.55, 17.4, 29.075, 15.65, 21.8, 16.875, 20.075, 17.125, 17.275, 
 28.275, 19.625, 22.925, 19.275, 29.225, 19.625, 15.15, 20.575, 18.8, 19.375, 18.6, 
 20.4, 21.175, 23.225, 16.625, 28.125, 25.425, 16.85, 15.275, 20.6, 15.2, 19.725, 
 21.825, 17.4, 17.875, 25.875, 22.175, 17.35, 18.225, 21.475, 27.925, 24.6, 18.575, 
 21.025, 20.4, 24.525, 16.8, 20.2, 19.875, 17.925, 18.25, 21.325, 28.075, 18.2, 18.925, 
 14.45, 19.725, 21.975, 23.4, 19.325, 36.7, 17.275, 24.1, 20.325, 16.675, 28.375, 
 16.875, 18.425, 22.15, 21.1, 21.45, 25, 17.4, 29.525, 28.225, 22.175, 20.325, 20.95, 
 22.475, 22.625, 19.275, 21.225, 21.125, 21.775, 20.45, 24.1, 16.4, 18.9, 17.925, 
 22.25, 21.2, 24.675, 20.5, 30.85, 17.2, 17.45, 25.4, 17.675, 30.825, 29.2, 18.975, 
 23.075, 19.175, 17.1, 20.875, 22.125, 17.225, 17, 21.425, 19.55, 17.45, 17.45, 22.3, 
 16.725, 23.55, 19.6, 19.425, 23.1, 17.225, 19.7, 18.725, 18.25, 18.575, 19.275, 18.05, 
 24.125, 17.625, 22.15, 29.425, 17.7, 18.5, 20.55, 15.7, 21.675, 20.15, 20.375, 16.95, 
 20.925, 19.475, 21.2, 20.275, 17.7, 16.2, 18.125, 19.625, 37.275, 55.5, 17.4, 14.875, 
 17.575, 26.675, 20.975, 19.025, 20.75, 36.65, 19.875, 18.375, 21.7, 16.075, 19.3, 
 18.65, 35.2, 19.15, 19.425, 19.65, 19.05, 20.075, 19.725, 16.225, 16.475, 48.25, 
 17.4, 20.225, 16.425, 32.05, 20.425, 19.15, 19, 18.875, 22.125, 42.25, 21.825, 22.35, 
 23.175, 26.55, 37.825, 21.375, 19.65, 17.725, 20.25, 36.275, 32.55, 18.575, 14.625, 
 18.975, 34.55, 18.375, 21.375, 22.025, 29.7, 23.25, 33.675, 29, 18.9, 25.1, 18.1, 
 22.075, 19.575, 17.1, 18.525, 19.95, 26.425, 18.775, 19.25, 17.65, 16.525, 23.7, 
 17.2, 16.225, 16.325, 15.4, 18.6, 19.175, 22.15, 16.825, 21.8, 17.95, 18.05, 15.4, 
 19.375, 20.675, 19.375, 18.7, 21.725, 23.375, 21.425, 19.275, 21.825, 22.975, 21.75, 
 32.35, 40.125, 17.675, 16.1, 17.575, 19.925, 27.7, 24.325, 20, 17.35, 43.575, 18.775, 
 23.1, 19.4, 21.275, 44.95, 18.325, 18.825, 17.925, 17.05, 20.6, 29.825, 30.85, 16.55, 
 17.275, 20.25, 21.675, 17.575, 20.95, 28.15, 27.05, 19.625, 31.8, 19.25, 16.55, 18, 
 29.4, 18.175, 18.1, 17.775, 24.275, 22.025, 27.475, 28, 16.7, 21.025, 21.975, 26.25, 
 24.525, 19.525, 15.225, 18.6, 26.625, 22.5, 29.425, 43, 16.975, 25.925, 21.175, 17.575, 
 20.525, 17.15, 19.15, 19.525, 20.625, 20.8, 17.4, 22.25, 17.675, 18.05, 19.675, 15.775, 
 15.25, 19.525, 24.95, 19.6, 22.025, 18.25, 25.2, 19.55, 17.475, 16.225, 21.05, 27.275, 
 30.475, 22.875, 15.675, 20.175, 19.875, 35.275, 20.5, 18.875, 45.675, 19.4, 21.225, 
 18, 21.65, 24.125, 38.6, 18.125, 25.025, 23, 20.775, 18.175, 16.15, 17.325, 21.475, 
 17.9, 24.4, 19.15, 19.6, 21.15, 22.975, 20.225, 19.025, 16.85, 23.25, 18.175, 18.625, 
 23.35, 18.2, 20.275, 18.85, 21.725, 16.825, 19.525, 18.925, 22.15, 19.15, 21.15, 
 16.7, 23.325, 18.15, 21.15, 16.975, 20.025, 20.275, 19.4, 18.9, 19.65, 19.85, 21, 
 16.025, 27.725, 34.05, 21.475, 32.675, 16.75, 43.15, 25.475, 21.35, 22.225, 20.575, 
 21.975, 19.35, 30.6, 25.775, 16.65, 21.675, 22.475, 16.9, 20.95, 21.4, 25.975, 17.425, 
 23.675, 21.55, 15.65, 54, 16.475, 18.225, 25.85, 24.45, 19.025, 21.55, 22.025, 17.8, 
 24.6, 25.95, 19.2, 17.65, 18.625, 17.825, 22.4, 30.675, 18.7, 21.95, 19.8, 19.975, 
 20.45, 24.4, 22.15, 24.125, 16.275, 17.625, 23.975, 19.4, 16.725, 20.05, 33.825, 
 19.55, 16.15, 15.85, 19.4, 22.175, 20.325, 16.625, 18.125, 16.675, 17.375, 21.925, 
 17.925, 17.25, 18.425, 19.725, 19.05, 18.4, 18.475, 26.6, 18.075, 22.775, 45.375, 
 31.325, 34.125, 18.275, 15.8, 17.45, 18.05, 19.775, 22.2, 18.125, 21.95, 21.75, 23.6, 
 16.125, 22.675, 22.725, 16.85, 22.225, 17.25, 16.925, 18.65, 21.375, 19.85, 18.75, 
 18.9, 23.925, 17.625, 40.275, 19.275, 19.825, 25.225, 19.625, 19.75, 18.2, 19.65, 
 30.75, 18.95, 17.45, 24.5, 17.175, 19.05, 14.85, 18.05, 20.075, 17.325, 15.875, 19.175, 
 22.675, 21.55, 16.275, 17.45, 23.4, 17.175, 17.2, 20.075, 26.425, 37.05, 16.275, 
 24.5, 16.35, 25.45, 17.275, 13.95, 17.125, 31.8, 19.075, 18.8, 18.05, 17.825, 20.35, 
 22.675, 21.925, 14.925, 24.2, 19.9, 19.475, 24.05, 19.7, 25.975, 18.55, 18.3, 21.625, 
 22.35, 19, 19.45, 20.15, 18.1, 18.975, 19.4, 17.225, 21.1, 19.825, 16.65, 25.25, 
 21.975, 18.6, 18.775, 20, 29.05, 21.425, 18.7, 15.55, 20.4, 17.825, 16.975, 21.45, 
 19.675, 18.8, 19.025, 19.175, 18.125, 16.7, 21.075, 24.2, 17.75, 18, 31.05, 24.1, 
 19.2, 21.55, 23, 15.75, 18.425, 18.175, 17.925, 21.15, 18.5, 18.75, 16.075, 19.7, 
 20.325, 19.025, 17.6, 24.6, 26.475, 25.575, 23.45, 33.9, 18.5, 18.7, 22.775, 21.525, 
 21.975, 21.35, 31.475, 31.95, 21.725, 20.925, 17.025, 18.225, 21.725, 17.6, 29.75, 
 25.1, 19.25, 19.5, 18.625, 30.475, 18.225, 22.725, 17.9, 20.675, 18.925, 20.9, 19.625, 
 21.975, 21.35, 22.3, 19.375, 19.6, 21.975, 18.5, 18.025, 21.925, 22.2, 22.85, 16.8, 
 16.975, 20.875, 40.9, 21.25, 24.775, 21.25, 19.75, 15.15, 18.075, 17.7, 18.075, 16.75, 
 27.125, 17.925, 16.625, 18.4, 22.775, 18.45, 17.275, 17.025, 20.175, 20.875, 20.45, 
 20.375, 23.725, 15.9, 15, 23.825, 21.9, 18.375, 20.925, 27.425, 19.875, 18.425, 19.775, 
 20.7, 18.1, 44.1, 28.525, 19.975, 17.8, 20.75, 20.775, 34.025, 24.025, 24.45, 41.375, 
 24.975, 20.175, 25.35, 22.65, 19.125, 22.15, 34.125, 21.75, 17.05, 15.625, 16.85, 
 21.2, 17.7, 21.4, 19.1, 31.225, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 1, 0, 0, 0, 0, 1, 1, 
 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 
 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 
 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 
 1, 0, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 
 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 
 1, 2, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 
 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 
 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 2, 0, 1, 0, 0, 0, 1, 0, 1, 
 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 
 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 
 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 
 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
 1, 1, 0, 0, 0, 1, 2, 1, 0, 2, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 
 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 2, 0, 
 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 
 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 
 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 2, 
 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 
 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 
 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 
 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 2, 0, 0, 1, 0, 1, 1, 1, 1, 0, 
 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 2, 1, 0, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 
 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 
 2, 1, 1, 0, 1, 1, 1, 2, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 2, 0, 1, 
 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 
 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 
 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 
 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 2, 
 0, 1, 1, 1, 1, 0, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 
 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 
 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 
 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 
 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
 0, 0, 2, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 
 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 
 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 
 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 
 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 
 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 
 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 
 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 
 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 
 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 
 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 
 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 
 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 
 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 
 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 
 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 
 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 
 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 
 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 
 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 
 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 
 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 
 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 
 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 
 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 
 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 
 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 
 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 
 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 
 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 
 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 
 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 
 1, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 
 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 
 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 
 2, 1, 1, 1, 1, 0, 0, 2, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1, 0, 1, 2, 0, 0, 1, 0, 1, 0, 0, 1, 
 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 2, 1, 0, 
 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 
 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 
 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 
 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 
 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 
 0, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 
 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 
 0, 1, 1, 0, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 
 1, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 
 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 
 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 
 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 2, 
 2, 0, 0, 1, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 2, 1, 
 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 0, 0, 1, 0, 1, 2, 0, 1, 
 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 
 0, 1, 0, 1, 1, 2, 1, 2, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 
 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 
 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
 1, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 
 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 1, 1, 0, 
 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 
 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 0, 
 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 
 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 
 0, 1, 0, 2, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 2, 0, 0, 0, 1, 
 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 2, 1, 2, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 0, 0, 1, 0, 
 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1), .Dim = c(1015L, 8L), .Dimnames = list(
     NULL, c("MSFC.T25FW", "MSFC.NHPT", "Treatments.DMTname", "Treatments.nDMT", "Treatments.hasIM", 
     "Treatments.hasIS", "Treatments.hasMA", "Treatments.DMTcategory"))), y = structure(c(1L, 
 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 
 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 
 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 
 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 
 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 
 2L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 
 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 
 2L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 
 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 
 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 
 1L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 
 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 
 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 
 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 
 1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 
 1L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 
 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
 1L, 2L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 
 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 
 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 
 2L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 
 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 
 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 
 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 
 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 
 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 
 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 
 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 
 2L, 1L, 1L, 1L, 1L, 2L), .Label = c("FALSE", "TRUE"), class = "factor"), gamma = 0.0009765625, 
     cost = 0.1, probability = TRUE)
Error in if (any(co)) { : missing value where TRUE/FALSE needed
2022-08-25 23:58:43: Already run predictor 'NB' on group 'MSTr', skipping...
2022-08-25 23:58:43: Running predictor 'KNN' for group 'MSTr'.
2022-08-25 23:58:43: CV num 1
2022-08-25 23:58:44: KNN for groups MSFC - Treatments                   (  8 features) ->  best k: 180 / kernel: optimal    [perf: 0.507]
2022-08-25 23:58:45: ERROR running train/test for predictor 'KNN' and group 'MSTr': 
 subscript out of bounds
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: predict(kknn.mod, Xtest) at Code/05_predictors.R:156
4: predict.train.kknn(kknn.mod, Xtest)
5: kknn(formula(terms(object)), object$data, newdata, k = object$best.parameters$k, 
     kernel = object$best.parameters$kernel, distance = object$distance)
Error in valid[, ord, drop = FALSE] : subscript out of bounds
2022-08-25 23:58:45: Running predictor 'KNNC' for group 'MSTr'.
2022-08-25 23:58:45: CV num 1
2022-08-25 23:58:47: KNNC for groups MSFC - Treatments                   (  8 features) ->  best k: 80 / kernel: optimal
2022-08-25 23:58:47: ERROR running train/test for predictor 'KNNC' and group 'MSTr': 
 subscript out of bounds
TRACEBACK:
1: run(X, Y, pred, FIs)
2: predictor$trainPredict(X[foldIdx != i, ], Y[foldIdx != i], X[foldIdx == i, ]) at Code/Helpers/CVer.R:150
3: predict(kknn.modC, Xtest, type = "prob") at Code/05_predictors.R:169
4: predict.train.kknn(kknn.modC, Xtest, type = "prob")
5: kknn(formula(terms(object)), object$data, newdata, k = object$best.parameters$k, 
     kernel = object$best.parameters$kernel, distance = object$distance)
Error in valid[, ord, drop = FALSE] : subscript out of bounds
2022-08-25 23:58:47: ## Ran group 'MSTr' in 0.08 minutes.

2022-08-25 23:58:47: ###### Treating group of Categories: Pa
2022-08-25 23:58:47: Selected columns:
Patient.AgeOfOnset, Patient.Gender
2022-08-25 23:58:47: Already run predictor 'GLM' on group 'Pa', skipping...
2022-08-25 23:58:47: Already run predictor 'RF' on group 'Pa', skipping...
2022-08-25 23:58:47: Already run predictor 'RF2' on group 'Pa', skipping...
2022-08-25 23:58:47: Already run predictor 'RF3' on group 'Pa', skipping...
2022-08-25 23:58:47: Running predictor 'RFO' for group 'Pa'.
2022-08-25 23:58:47: CV num 1
2022-08-25 23:58:50: RFO for groups Patient                             (  2 features) -> best mtry:  2 [perf: 0.404]
2022-08-25 23:58:53: RFO for groups Patient                             (  2 features) -> best mtry:  2 [perf: 0.438]
2022-08-25 23:58:56: RFO for groups Patient                             (  2 features) -> best mtry:  2 [perf: 0.452]

2022-08-25 23:58:56: CV num 2
2022-08-25 23:58:58: RFO for groups Patient                             (  2 features) -> best mtry:  2 [perf: 0.418]
2022-08-25 23:59:00: RFO for groups Patient                             (  2 features) -> best mtry:  2 [perf: 0.468]
2022-08-25 23:59:03: RFO for groups Patient                             (  2 features) -> best mtry:  2 [perf: 0.416]

2022-08-25 23:59:03: Ran predictor 'RFO' for group 'Pa' in 0.26 minutes.
2022-08-25 23:59:03: Running predictor 'RP' for group 'Pa'.
2022-08-25 23:59:03: CV num 1
2022-08-25 23:59:15: RPart for groups Patient                             (  2 features) -> best min split: 20 / best cp: 0.01   [perf: 0.500]
2022-08-25 23:59:22: RPart for groups Patient                             (  2 features) -> best min split: 20 / best cp: 0.005  [perf: 0.500]
2022-08-25 23:59:28: RPart for groups Patient                             (  2 features) -> best min split: 20 / best cp: 0.01   [perf: 0.500]

2022-08-25 23:59:28: CV num 2
2022-08-25 23:59:35: RPart for groups Patient                             (  2 features) -> best min split: 70 / best cp: 0.002  [perf: 0.507]
2022-08-25 23:59:42: RPart for groups Patient                             (  2 features) -> best min split: 60 / best cp: 0.01   [perf: 0.500]
2022-08-25 23:59:53: RPart for groups Patient                             (  2 features) -> best min split: 30 / best cp: 0.002  [perf: 0.512]

2022-08-25 23:59:53: Ran predictor 'RP' for group 'Pa' in 0.83 minutes.
2022-08-25 23:59:53: Running predictor 'SVM' for group 'Pa'.
2022-08-25 23:59:53: CV num 1
2022-08-26 00:02:51: SVM for groups Patient                             (  2 features) -> best gamma:    0.0312 / best cost:   31.6 [perf: 0.538]
2022-08-26 00:04:58: SVM for groups Patient                             (  2 features) -> best gamma:         1 / best cost:      1 [perf: 0.547]
2022-08-26 00:06:32: SVM for groups Patient                             (  2 features) -> best gamma:    0.0312 / best cost:   3.16 [perf: 0.546]

2022-08-26 00:06:32: CV num 2
2022-08-26 00:08:05: SVM for groups Patient                             (  2 features) -> best gamma:   0.00781 / best cost:    0.1 [perf: 0.531]
2022-08-26 00:09:44: SVM for groups Patient                             (  2 features) -> best gamma:    0.0625 / best cost:  0.316 [perf: 0.538]
2022-08-26 00:11:18: SVM for groups Patient                             (  2 features) -> best gamma:   0.00391 / best cost:   31.6 [perf: 0.538]

2022-08-26 00:11:18: Ran predictor 'SVM' for group 'Pa' in 11.42 minutes.
2022-08-26 00:11:18: Already run predictor 'NB' on group 'Pa', skipping...
2022-08-26 00:11:18: Running predictor 'KNN' for group 'Pa'.
2022-08-26 00:11:18: CV num 1
2022-08-26 00:11:20: KNN for groups Patient                             (  2 features) ->  best k: 50  / kernel: optimal    [perf: 0.578]
2022-08-26 00:11:21: KNN for groups Patient                             (  2 features) ->  best k: 40  / kernel: optimal    [perf: 0.579]
2022-08-26 00:11:22: KNN for groups Patient                             (  2 features) ->  best k: 50  / kernel: optimal    [perf: 0.590]

2022-08-26 00:11:22: CV num 2
2022-08-26 00:11:26: KNN for groups Patient                             (  2 features) ->  best k: 40  / kernel: optimal    [perf: 0.571]
2022-08-26 00:11:27: KNN for groups Patient                             (  2 features) ->  best k: 30  / kernel: optimal    [perf: 0.586]
2022-08-26 00:11:28: KNN for groups Patient                             (  2 features) ->  best k: 30  / kernel: optimal    [perf: 0.585]

2022-08-26 00:11:28: Ran predictor 'KNN' for group 'Pa' in 0.16 minutes.
2022-08-26 00:11:28: Already run predictor 'KNNC' on group 'Pa', skipping...
2022-08-26 00:11:28: ## Ran group 'Pa' in 12.68 minutes.

